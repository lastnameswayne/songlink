{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport * as React from \"react\";\nexport var LinkOverlay = props => /*#__PURE__*/React.createElement(chakra.a, _extends({}, props, {\n  css: {\n    position: \"static\",\n    \"&::before\": {\n      content: \"''\",\n      cursor: \"inherit\",\n      display: \"block\",\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }\n}));\n/**\n * LinkBox is used to wrap content areas within a link while ensuring semantic html\n * To learn more, @see https://github.com/chakra-ui/chakra-ui/pull/1717\n */\n\nexport var LinkBox = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n    children,\n    href,\n    isExternal\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"children\", \"href\", \"target\", \"rel\", \"isExternal\"]);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    pos: \"relative\"\n  }, rest), children, /*#__PURE__*/React.createElement(LinkOverlay, {\n    href: href,\n    target: isExternal ? \"_blank\" : undefined,\n    rel: isExternal ? \"noopener noreferrer\" : undefined\n  }));\n});","map":{"version":3,"sources":["../../src/link-box.tsx"],"names":["LinkOverlay","props","position","content","cursor","display","top","left","width","height","LinkBox","forwardRef","isExternal","rest","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,MAAA,EAAA,UAAA,QAAA,mBAAA;AAOA,OAAO,KAAP,KAAA,MAAA,OAAA;AAIA,OAAO,IAAMA,WAAiC,GAAIC,KAAD,IAAA,aAC/C,KAAA,CAAA,aAAA,CAAC,MAAD,CAAA,CAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEE,EAAA,GAAG,EAAE;AACHC,IAAAA,QAAQ,EADL,QAAA;AAEH,iBAAa;AACXC,MAAAA,OAAO,EADI,IAAA;AAEXC,MAAAA,MAAM,EAFK,SAAA;AAGXC,MAAAA,OAAO,EAHI,OAAA;AAIXH,MAAAA,QAAQ,EAJG,UAAA;AAKXI,MAAAA,GAAG,EALQ,CAAA;AAMXC,MAAAA,IAAI,EANO,CAAA;AAOXC,MAAAA,KAAK,EAPM,MAAA;AAQXC,MAAAA,MAAM,EAAE;AARG;AAFV;AAFP,CAAA,CAAA,CADK;AAyBP;AACA;AACA;AACA;;AACA,OAAO,IAAMC,OAAO,GAAA,aAAGC,UAAU,CAAsB,CAAA,KAAA,EAAA,GAAA,KAAgB;AACrE,MAAM;AAAA,IAAA,QAAA;AAAA,IAAA,IAAA;AAA+BC,IAAAA;AAA/B,MAAN,KAAA;AAAA,MAAoDC,IAApD,GAAA,6BAAA,CAAA,KAAA,EAAA,CAAA,UAAA,EAAA,MAAA,EAAA,QAAA,EAAA,KAAA,EAAA,YAAA,CAAA,CAAA;;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAC,MAAD,CAAA,GAAA,EAAA,QAAA,CAAA;AAAY,IAAA,GAAG,EAAf,GAAA;AAAsB,IAAA,GAAG,EAAC;AAA1B,GAAA,EAAA,IAAA,CAAA,EAAA,QAAA,EAAA,aAEE,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA;AACE,IAAA,IAAI,EADN,IAAA;AAEE,IAAA,MAAM,EAAED,UAAU,GAAA,QAAA,GAFpB,SAAA;AAGE,IAAA,GAAG,EAAEA,UAAU,GAAA,qBAAA,GAA2BE;AAH5C,GAAA,CAFF,CADF;AAHK,CAA0B,CAA1B","sourcesContent":["import {\n  chakra,\n  ChakraComponent,\n  forwardRef,\n  PropsOf,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport * as React from \"react\"\n\nexport interface LinkOverlayProps extends HTMLChakraProps<\"a\"> {}\n\nexport const LinkOverlay: ChakraComponent<\"a\"> = (props) => (\n  <chakra.a\n    {...props}\n    css={{\n      position: \"static\",\n      \"&::before\": {\n        content: \"''\",\n        cursor: \"inherit\",\n        display: \"block\",\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n      },\n    }}\n  />\n)\n\ntype BaseLinkProps = Pick<PropsOf<\"a\">, \"href\" | \"target\" | \"rel\">\n\nexport interface LinkBoxProps extends HTMLChakraProps<\"div\">, BaseLinkProps {\n  isExternal?: boolean\n}\n\n/**\n * LinkBox is used to wrap content areas within a link while ensuring semantic html\n * To learn more, @see https://github.com/chakra-ui/chakra-ui/pull/1717\n */\nexport const LinkBox = forwardRef<LinkBoxProps, \"div\">((props, ref) => {\n  const { children, href, target, rel, isExternal, ...rest } = props\n\n  return (\n    <chakra.div ref={ref} pos=\"relative\" {...rest}>\n      {children}\n      <LinkOverlay\n        href={href}\n        target={isExternal ? \"_blank\" : undefined}\n        rel={isExternal ? \"noopener noreferrer\" : undefined}\n      />\n    </chakra.div>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}