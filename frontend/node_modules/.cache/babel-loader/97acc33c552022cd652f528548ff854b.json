{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { mergeRefs } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { getArrowStyles, getBoxShadow, toTransformOrigin } from \"./popper.utils\";\nimport { usePopper as useBasePopper } from \"./react-popper\";\nexport function usePopper(props) {\n  var _popperJS$state$place, _popperJS$state;\n\n  if (props === void 0) {\n    props = {};\n  }\n\n  var {\n    placement = \"bottom\",\n    preventOverflow = true,\n    fixed = false,\n    flip = true,\n    arrowSize = 8,\n    arrowShadowColor,\n    gutter = 8,\n    arrowPadding = 4,\n    offset: offsetProp,\n    matchWidth,\n    modifiers = []\n  } = props;\n  var [referenceNode, setReferenceNode] = React.useState(null);\n  var [popperNode, setPopperNode] = React.useState(null);\n  var [arrowNode, setArrowNode] = React.useState(null);\n  /**\n   * recommended via popper docs\n   * @see https://popper.js.org/react-popper/v2/faq/#why-i-get-render-loop-whenever-i-put-a-function-inside-the-popper-configuration\n   */\n\n  var customModifiers = React.useMemo(() => {\n    var offset = offsetProp != null ? offsetProp : [0, gutter];\n    return [// @see https://popper.js.org/docs/v2/modifiers/offset/\n    {\n      name: \"offset\",\n      options: {\n        offset: offset != null ? offset : [0, gutter]\n      },\n      phase: \"main\"\n    }, // @see https://popper.js.org/docs/v2/modifiers/prevent-overflow/\n    {\n      name: \"preventOverflow\",\n      enabled: !!preventOverflow,\n      phase: \"main\"\n    }, // @see https://popper.js.org/docs/v2/modifiers/arrow/\n    {\n      name: \"arrow\",\n      enabled: !!arrowNode,\n      options: {\n        element: arrowNode,\n        padding: arrowPadding\n      },\n      phase: \"main\"\n    }, // @see https://popper.js.org/docs/v2/modifiers/flip/\n    {\n      name: \"flip\",\n      enabled: flip,\n      options: {\n        padding: 8\n      },\n      phase: \"main\"\n    }, {\n      name: \"matchWidth\",\n      enabled: !!matchWidth,\n      phase: \"beforeWrite\",\n      requires: [\"computeStyles\"],\n      fn: _ref2 => {\n        var {\n          state\n        } = _ref2;\n        state.styles.popper.width = state.rects.reference.width + \"px\";\n      },\n      effect: _ref3 => {\n        var {\n          state\n        } = _ref3;\n        return () => {\n          var reference = state.elements.reference;\n          state.elements.popper.style.width = reference.offsetWidth + \"px\";\n        };\n      }\n    }, {\n      name: \"applyArrowHide\",\n      enabled: true,\n      phase: \"write\",\n\n      fn(_ref4) {\n        var {\n          state\n        } = _ref4;\n        var {\n          arrow\n        } = state.elements;\n\n        if (arrow) {\n          var _state$modifiersData$;\n\n          if (((_state$modifiersData$ = state.modifiersData.arrow) == null ? void 0 : _state$modifiersData$.centerOffset) !== 0) {\n            arrow.setAttribute(\"data-hide\", \"\");\n          } else {\n            arrow.removeAttribute(\"data-hide\");\n          }\n        }\n      }\n\n    }];\n  }, [arrowNode, arrowPadding, flip, preventOverflow, offsetProp, gutter, matchWidth]);\n  var popperJS = useBasePopper(referenceNode, popperNode, {\n    placement,\n    strategy: fixed ? \"fixed\" : \"absolute\",\n    modifiers: customModifiers.concat(modifiers)\n  });\n  /**\n   * Ensure the popper will be correctly positioned with an extra update\n   */\n\n  React.useEffect(() => {\n    popperJS.forceUpdate == null ? void 0 : popperJS.forceUpdate();\n  });\n  var finalPlacement = (_popperJS$state$place = (_popperJS$state = popperJS.state) == null ? void 0 : _popperJS$state.placement) != null ? _popperJS$state$place : placement;\n  var arrowStyles = getArrowStyles({\n    placement: finalPlacement,\n    popperArrowStyles: popperJS.styles.arrow,\n    arrowSize\n  });\n  var getReferenceProps = React.useCallback(function (props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(setReferenceNode, _ref)\n    });\n  }, []);\n  var getPopperProps = React.useCallback(function (props, _ref) {\n    var _popperJS$styles;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    return _extends({}, props, popperJS.attributes.popper, {\n      ref: mergeRefs(setPopperNode, _ref),\n      style: _extends({}, props.style, (_popperJS$styles = popperJS.styles) == null ? void 0 : _popperJS$styles.popper)\n    });\n  }, [popperJS.attributes, popperJS.styles]);\n  var getArrowWrapperProps = React.useCallback(function (props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    return _extends({}, props, popperJS.attributes.arrow, {\n      ref: mergeRefs(setArrowNode, _ref),\n      style: _extends({}, props.style, arrowStyles)\n    });\n  }, [popperJS.attributes, arrowStyles]);\n  var getArrowProps = React.useCallback(function (props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    return _extends({}, props, {\n      ref: _ref,\n      style: _extends({\n        boxShadow: getBoxShadow(finalPlacement, arrowShadowColor)\n      }, props.style, {\n        position: \"absolute\",\n        zIndex: -1,\n        width: \"100%\",\n        height: \"100%\",\n        transform: \"rotate(45deg)\"\n      })\n    });\n  }, [finalPlacement, arrowShadowColor]);\n  return {\n    transformOrigin: toTransformOrigin(finalPlacement),\n    getReferenceProps,\n    getPopperProps,\n    getArrowWrapperProps,\n    getArrowProps,\n    state: popperJS.state,\n    forceUpdate: popperJS.forceUpdate,\n    update: popperJS.update,\n    placement: finalPlacement\n  };\n}","map":{"version":3,"sources":["../../src/use-popper.ts"],"names":["usePopper","props","placement","preventOverflow","fixed","flip","arrowSize","gutter","arrowPadding","offset","modifiers","React","customModifiers","offsetProp","name","options","phase","enabled","element","padding","requires","fn","state","effect","reference","arrow","popperJS","useBasePopper","strategy","finalPlacement","arrowStyles","getArrowStyles","popperArrowStyles","getReferenceProps","_ref","ref","mergeRefs","getPopperProps","style","getArrowWrapperProps","getArrowProps","boxShadow","getBoxShadow","position","zIndex","width","height","transform","transformOrigin","toTransformOrigin","forceUpdate","update"],"mappings":"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","sourcesContent":["import { mergeRefs, PropGetter } from \"@chakra-ui/utils\"\nimport { Modifier, Placement } from \"@popperjs/core\"\nimport * as React from \"react\"\nimport { getArrowStyles, getBoxShadow, toTransformOrigin } from \"./popper.utils\"\nimport { usePopper as useBasePopper } from \"./react-popper\"\n\nexport type { Placement }\n\nexport interface UsePopperProps {\n  gutter?: number\n  placement?: Placement\n  offset?: [number, number]\n  preventOverflow?: boolean\n  fixed?: boolean\n  flip?: boolean\n  arrowSize?: number\n  arrowShadowColor?: string\n  /**\n   * The distance of the arrow to its next border (numeric)\n   * E.g. arrowPadding = borderRadius * 2\n   */\n  arrowPadding?: number\n  matchWidth?: boolean\n  modifiers?: Modifier<string, any>[]\n}\n\nexport function usePopper(props: UsePopperProps = {}) {\n  const {\n    placement = \"bottom\",\n    preventOverflow = true,\n    fixed = false,\n    flip = true,\n    arrowSize = 8,\n    arrowShadowColor,\n    gutter = 8,\n    arrowPadding = 4,\n    offset: offsetProp,\n    matchWidth,\n    modifiers = [],\n  } = props\n\n  const [\n    referenceNode,\n    setReferenceNode,\n  ] = React.useState<HTMLButtonElement | null>(null)\n  const [popperNode, setPopperNode] = React.useState<HTMLDivElement | null>(\n    null,\n  )\n  const [arrowNode, setArrowNode] = React.useState<HTMLDivElement | null>(null)\n\n  /**\n   * recommended via popper docs\n   * @see https://popper.js.org/react-popper/v2/faq/#why-i-get-render-loop-whenever-i-put-a-function-inside-the-popper-configuration\n   */\n  type Modifiers = Partial<Modifier<any, unknown>>[]\n  const customModifiers = React.useMemo<Modifiers>(() => {\n    const offset = offsetProp ?? [0, gutter]\n\n    return [\n      // @see https://popper.js.org/docs/v2/modifiers/offset/\n      {\n        name: \"offset\",\n        options: {\n          offset: offset ?? [0, gutter],\n        },\n        phase: \"main\",\n      },\n      // @see https://popper.js.org/docs/v2/modifiers/prevent-overflow/\n      {\n        name: \"preventOverflow\",\n        enabled: !!preventOverflow,\n        phase: \"main\",\n      },\n      // @see https://popper.js.org/docs/v2/modifiers/arrow/\n      {\n        name: \"arrow\",\n        enabled: !!arrowNode,\n        options: { element: arrowNode, padding: arrowPadding },\n        phase: \"main\",\n      },\n      // @see https://popper.js.org/docs/v2/modifiers/flip/\n      {\n        name: \"flip\",\n        enabled: flip,\n        options: {\n          padding: 8,\n        },\n        phase: \"main\",\n      },\n      {\n        name: \"matchWidth\",\n        enabled: !!matchWidth,\n        phase: \"beforeWrite\",\n        requires: [\"computeStyles\"],\n        fn: ({ state }) => {\n          state.styles.popper.width = `${state.rects.reference.width}px`\n        },\n        effect: ({ state }) => () => {\n          const reference = state.elements.reference as HTMLElement\n          state.elements.popper.style.width = `${reference.offsetWidth}px`\n        },\n      },\n      {\n        name: \"applyArrowHide\",\n        enabled: true,\n        phase: \"write\",\n        fn({ state }) {\n          const { arrow } = state.elements\n          if (arrow) {\n            if (state.modifiersData.arrow?.centerOffset !== 0) {\n              arrow.setAttribute(\"data-hide\", \"\")\n            } else {\n              arrow.removeAttribute(\"data-hide\")\n            }\n          }\n        },\n      },\n    ]\n  }, [\n    arrowNode,\n    arrowPadding,\n    flip,\n    preventOverflow,\n    offsetProp,\n    gutter,\n    matchWidth,\n  ])\n\n  const popperJS = useBasePopper(referenceNode as any, popperNode as any, {\n    placement,\n    strategy: fixed ? \"fixed\" : \"absolute\",\n    modifiers: customModifiers.concat(modifiers),\n  })\n\n  /**\n   * Ensure the popper will be correctly positioned with an extra update\n   */\n  React.useEffect(() => {\n    popperJS.forceUpdate?.()\n  })\n\n  const finalPlacement = popperJS.state?.placement ?? placement\n\n  const arrowStyles = getArrowStyles({\n    placement: finalPlacement,\n    popperArrowStyles: popperJS.styles.arrow,\n    arrowSize,\n  })\n\n  const getReferenceProps: PropGetter = React.useCallback(\n    (props = {}, _ref = null) => ({\n      ...props,\n      ref: mergeRefs(setReferenceNode, _ref),\n    }),\n    [],\n  )\n\n  const getPopperProps: PropGetter = React.useCallback(\n    (props = {}, _ref = null) => ({\n      ...props,\n      ...popperJS.attributes.popper,\n      ref: mergeRefs(setPopperNode, _ref),\n      style: { ...props.style, ...popperJS.styles?.popper },\n    }),\n    [popperJS.attributes, popperJS.styles],\n  )\n\n  const getArrowWrapperProps: PropGetter = React.useCallback(\n    (props = {}, _ref = null) => ({\n      ...props,\n      ...popperJS.attributes.arrow,\n      ref: mergeRefs(setArrowNode, _ref),\n      style: { ...props.style, ...arrowStyles },\n    }),\n    [popperJS.attributes, arrowStyles],\n  )\n\n  const getArrowProps: PropGetter = React.useCallback(\n    (props = {}, _ref = null) => ({\n      ...props,\n      ref: _ref,\n      style: {\n        boxShadow: getBoxShadow(finalPlacement, arrowShadowColor),\n        ...props.style,\n        position: \"absolute\",\n        zIndex: -1,\n        width: \"100%\",\n        height: \"100%\",\n        transform: \"rotate(45deg)\",\n      },\n    }),\n    [finalPlacement, arrowShadowColor],\n  )\n\n  return {\n    transformOrigin: toTransformOrigin(finalPlacement),\n    getReferenceProps,\n    getPopperProps,\n    getArrowWrapperProps,\n    getArrowProps,\n    state: popperJS.state,\n    forceUpdate: popperJS.forceUpdate,\n    update: popperJS.update,\n    placement: finalPlacement,\n  }\n}\n\nexport type UsePopperReturn = ReturnType<typeof usePopper>\n"]},"metadata":{},"sourceType":"module"}