{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { EASINGS } from \"./__utils\";\nvar directions = {\n  bottom: {\n    motion: {\n      y: \"100%\"\n    },\n    baseStyle: {\n      maxWidth: \"100vw\",\n      bottom: 0,\n      left: 0,\n      right: 0\n    }\n  },\n  top: {\n    motion: {\n      y: \"-100%\"\n    },\n    baseStyle: {\n      maxWidth: \"100vw\",\n      top: 0,\n      left: 0,\n      right: 0\n    }\n  },\n  left: {\n    motion: {\n      x: \"-100%\"\n    },\n    baseStyle: {\n      width: \"100%\",\n      height: \"100vh\",\n      left: 0,\n      top: 0\n    }\n  },\n  right: {\n    motion: {\n      x: \"100%\"\n    },\n    baseStyle: {\n      width: \"100%\",\n      right: 0,\n      top: 0,\n      height: \"100vh\"\n    }\n  }\n};\nvar variants = {\n  exit: direction => {\n    var _directions$direction;\n\n    var {\n      motion\n    } = (_directions$direction = directions[direction]) != null ? _directions$direction : {};\n    return _extends({}, motion, {\n      transition: {\n        duration: 0.15,\n        ease: EASINGS.easeInOut\n      }\n    });\n  },\n  enter: direction => {\n    var _directions$direction2;\n\n    var {\n      motion\n    } = (_directions$direction2 = directions[direction]) != null ? _directions$direction2 : {};\n    var [axis] = motion ? Object.keys(motion) : [\"x\"];\n    return {\n      [axis]: 0,\n      transition: {\n        type: \"spring\",\n        damping: 25,\n        stiffness: 180\n      }\n    };\n  }\n};\nexport var Slide = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _directions$direction3;\n\n  var {\n    direction = \"right\",\n    style,\n    unmountOnExit,\n    in: isOpen,\n    className\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"direction\", \"style\", \"unmountOnExit\", \"in\", \"className\"]);\n\n  var {\n    baseStyle\n  } = (_directions$direction3 = directions[direction]) != null ? _directions$direction3 : {};\n  var shouldExpand = unmountOnExit ? isOpen && unmountOnExit : true;\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    custom: direction\n  }, shouldExpand && /*#__PURE__*/React.createElement(motion.div, _extends({\n    ref: ref,\n    initial: \"exit\",\n    className: cx(\"chakra-slide\", className),\n    animate: isOpen || unmountOnExit ? \"enter\" : \"exit\",\n    exit: \"exit\",\n    custom: direction,\n    variants: variants,\n    style: _extends({\n      position: \"fixed\"\n    }, baseStyle, style)\n  }, rest)));\n});\n\nif (__DEV__) {\n  Slide.displayName = \"Slide\";\n}","map":{"version":3,"sources":["../../src/slide.tsx"],"names":["directions","bottom","motion","y","baseStyle","maxWidth","left","right","top","x","width","height","variants","exit","direction","transition","duration","ease","EASINGS","easeInOut","enter","Object","type","damping","stiffness","Slide","in","className","rest","shouldExpand","unmountOnExit","isOpen","cx","position"],"mappings":"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","sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport { AnimatePresence, HTMLMotionProps, motion } from \"framer-motion\"\nimport * as React from \"react\"\nimport { EASINGS, MotionVariants } from \"./__utils\"\n\nexport type SlideDirection = keyof typeof directions\n\nconst directions = {\n  bottom: {\n    motion: { y: \"100%\" },\n    baseStyle: {\n      maxWidth: \"100vw\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n    },\n  },\n  top: {\n    motion: { y: \"-100%\" },\n    baseStyle: {\n      maxWidth: \"100vw\",\n      top: 0,\n      left: 0,\n      right: 0,\n    },\n  },\n  left: {\n    motion: { x: \"-100%\" },\n    baseStyle: {\n      width: \"100%\",\n      height: \"100vh\",\n      left: 0,\n      top: 0,\n    },\n  },\n  right: {\n    motion: { x: \"100%\" },\n    baseStyle: {\n      width: \"100%\",\n      right: 0,\n      top: 0,\n      height: \"100vh\",\n    },\n  },\n}\n\ntype SlideVariants = MotionVariants<\"enter\" | \"exit\">\n\nconst variants: SlideVariants = {\n  exit: (direction: string) => {\n    const { motion } = directions[direction] ?? {}\n    return {\n      ...motion,\n      transition: {\n        duration: 0.15,\n        ease: EASINGS.easeInOut,\n      },\n    }\n  },\n  enter: (direction: string) => {\n    const { motion } = directions[direction] ?? {}\n    const [axis] = motion ? Object.keys(motion) : [\"x\"]\n    return {\n      [axis]: 0,\n      transition: {\n        type: \"spring\",\n        damping: 25,\n        stiffness: 180,\n      },\n    }\n  },\n}\n\nexport interface SlideOptions {\n  /**\n   * If `true`, the element will unmount when `in={false}` and animation is done\n   */\n  unmountOnExit?: boolean\n  /**\n   * The direction to slide from\n   * @default \"right\"\n   */\n  direction?: SlideDirection\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in?: boolean\n}\n\nexport interface SlideProps extends HTMLMotionProps<\"div\">, SlideOptions {}\n\nexport const Slide = React.forwardRef<HTMLDivElement, SlideProps>(\n  (props, ref) => {\n    const {\n      direction = \"right\",\n      style,\n      unmountOnExit,\n      in: isOpen,\n      className,\n      ...rest\n    } = props\n\n    const { baseStyle } = directions[direction] ?? {}\n    const shouldExpand = unmountOnExit ? isOpen && unmountOnExit : true\n\n    return (\n      <AnimatePresence custom={direction}>\n        {shouldExpand && (\n          <motion.div\n            ref={ref}\n            initial=\"exit\"\n            className={cx(\"chakra-slide\", className)}\n            animate={isOpen || unmountOnExit ? \"enter\" : \"exit\"}\n            exit=\"exit\"\n            custom={direction}\n            variants={variants}\n            style={{\n              position: \"fixed\",\n              ...baseStyle,\n              ...style,\n            }}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  Slide.displayName = \"Slide\"\n}\n"]},"metadata":{},"sourceType":"module"}