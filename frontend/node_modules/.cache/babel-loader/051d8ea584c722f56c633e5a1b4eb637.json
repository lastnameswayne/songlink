{"ast":null,"code":"/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\nfunction e(e, t, n, r) {\n  return new (n || (n = Promise))(function (o, i) {\n    function a(e) {\n      try {\n        c(r.next(e));\n      } catch (e) {\n        i(e);\n      }\n    }\n\n    function u(e) {\n      try {\n        c(r.throw(e));\n      } catch (e) {\n        i(e);\n      }\n    }\n\n    function c(e) {\n      var t;\n      e.done ? o(e.value) : (t = e.value, t instanceof n ? t : new n(function (e) {\n        e(t);\n      })).then(a, u);\n    }\n\n    c((r = r.apply(e, t || [])).next());\n  });\n}\n\nfunction t(e, t) {\n  var n,\n      r,\n      o,\n      i,\n      a = {\n    label: 0,\n    sent: function () {\n      if (1 & o[0]) throw o[1];\n      return o[1];\n    },\n    trys: [],\n    ops: []\n  };\n  return i = {\n    next: u(0),\n    throw: u(1),\n    return: u(2)\n  }, \"function\" == typeof Symbol && (i[Symbol.iterator] = function () {\n    return this;\n  }), i;\n\n  function u(i) {\n    return function (u) {\n      return function (i) {\n        if (n) throw new TypeError(\"Generator is already executing.\");\n\n        for (; a;) try {\n          if (n = 1, r && (o = 2 & i[0] ? r.return : i[0] ? r.throw || ((o = r.return) && o.call(r), 0) : r.next) && !(o = o.call(r, i[1])).done) return o;\n\n          switch (r = 0, o && (i = [2 & i[0], o.value]), i[0]) {\n            case 0:\n            case 1:\n              o = i;\n              break;\n\n            case 4:\n              return a.label++, {\n                value: i[1],\n                done: !1\n              };\n\n            case 5:\n              a.label++, r = i[1], i = [0];\n              continue;\n\n            case 7:\n              i = a.ops.pop(), a.trys.pop();\n              continue;\n\n            default:\n              if (!(o = a.trys, (o = o.length > 0 && o[o.length - 1]) || 6 !== i[0] && 2 !== i[0])) {\n                a = 0;\n                continue;\n              }\n\n              if (3 === i[0] && (!o || i[1] > o[0] && i[1] < o[3])) {\n                a.label = i[1];\n                break;\n              }\n\n              if (6 === i[0] && a.label < o[1]) {\n                a.label = o[1], o = i;\n                break;\n              }\n\n              if (o && a.label < o[2]) {\n                a.label = o[2], a.ops.push(i);\n                break;\n              }\n\n              o[2] && a.ops.pop(), a.trys.pop();\n              continue;\n          }\n\n          i = t.call(e, a);\n        } catch (e) {\n          i = [6, e], r = 0;\n        } finally {\n          n = o = 0;\n        }\n\n        if (5 & i[0]) throw i[1];\n        return {\n          value: i[0] ? i[1] : void 0,\n          done: !0\n        };\n      }([i, u]);\n    };\n  }\n}\n\nvar n = function (e) {};\n\nfunction r(e) {\n  n(e);\n}\n\nfunction o(e) {\n  n = e;\n}\n\n(function () {\n  (console.warn || console.log).apply(console, arguments);\n}).bind(\"[clipboard-polyfill]\");\nvar i,\n    a,\n    u,\n    c,\n    l = \"undefined\" == typeof navigator ? void 0 : navigator,\n    d = null == l ? void 0 : l.clipboard,\n    s = (null === (i = null == d ? void 0 : d.read) || void 0 === i || i.bind(d), null === (a = null == d ? void 0 : d.readText) || void 0 === a ? void 0 : a.bind(d)),\n    f = (null === (u = null == d ? void 0 : d.write) || void 0 === u || u.bind(d), null === (c = null == d ? void 0 : d.writeText) || void 0 === c ? void 0 : c.bind(d)),\n    p = \"undefined\" == typeof window ? void 0 : window,\n    v = (null == p || p.ClipboardItem, p);\n\nfunction b() {\n  return \"undefined\" == typeof ClipboardEvent && void 0 !== v.clipboardData && void 0 !== v.clipboardData.setData;\n}\n\nfunction y() {\n  return e(this, void 0, void 0, function () {\n    var e;\n    return t(this, function (t) {\n      if (\"\" === (e = v.clipboardData.getData(\"Text\"))) throw new Error(\"Empty clipboard or could not read plain text from clipboard\");\n      return [2, e];\n    });\n  });\n}\n\nvar m = function () {\n  this.success = !1;\n};\n\nfunction h(e, t, n) {\n  for (var o in r(\"listener called\"), e.success = !0, t) {\n    var i = t[o],\n        a = n.clipboardData;\n    a.setData(o, i), \"text/plain\" === o && a.getData(o) !== i && (r(\"setting text/plain failed\"), e.success = !1);\n  }\n\n  n.preventDefault();\n}\n\nfunction w(e) {\n  var t = new m(),\n      n = h.bind(this, t, e);\n  document.addEventListener(\"copy\", n);\n\n  try {\n    document.execCommand(\"copy\");\n  } finally {\n    document.removeEventListener(\"copy\", n);\n  }\n\n  return t.success;\n}\n\nfunction g(e, t) {\n  x(e);\n  var n = w(t);\n  return E(), n;\n}\n\nfunction x(e) {\n  var t = document.getSelection();\n\n  if (t) {\n    var n = document.createRange();\n    n.selectNodeContents(e), t.removeAllRanges(), t.addRange(n);\n  }\n}\n\nfunction E() {\n  var e = document.getSelection();\n  e && e.removeAllRanges();\n}\n\nfunction D(n) {\n  return e(this, void 0, void 0, function () {\n    var e;\n    return t(this, function (t) {\n      if (e = \"text/plain\" in n, b()) {\n        if (!e) throw new Error(\"No `text/plain` value was specified.\");\n        if (o = n[\"text/plain\"], v.clipboardData.setData(\"Text\", o)) return [2, !0];\n        throw new Error(\"Copying failed, possibly because the user rejected it.\");\n      }\n\n      var o;\n      return w(n) ? (r(\"regular execCopy worked\"), [2, !0]) : navigator.userAgent.indexOf(\"Edge\") > -1 ? (r('UA \"Edge\" => assuming success'), [2, !0]) : g(document.body, n) ? (r(\"copyUsingTempSelection worked\"), [2, !0]) : function (e) {\n        var t = document.createElement(\"div\");\n        t.setAttribute(\"style\", \"-webkit-user-select: text !important\"), t.textContent = \"temporary element\", document.body.appendChild(t);\n        var n = g(t, e);\n        return document.body.removeChild(t), n;\n      }(n) ? (r(\"copyUsingTempElem worked\"), [2, !0]) : function (e) {\n        r(\"copyTextUsingDOM\");\n        var t = document.createElement(\"div\");\n        t.setAttribute(\"style\", \"-webkit-user-select: text !important\");\n        var n = t;\n        t.attachShadow && (r(\"Using shadow DOM.\"), n = t.attachShadow({\n          mode: \"open\"\n        }));\n        var o = document.createElement(\"span\");\n        o.innerText = e, n.appendChild(o), document.body.appendChild(t), x(o);\n        var i = document.execCommand(\"copy\");\n        return E(), document.body.removeChild(t), i;\n      }(n[\"text/plain\"]) ? (r(\"copyTextUsingDOM worked\"), [2, !0]) : [2, !1];\n    });\n  });\n}\n\nfunction C(n) {\n  return e(this, void 0, void 0, function () {\n    return t(this, function (e) {\n      if (f) return r(\"Using `navigator.clipboard.writeText()`.\"), [2, f(n)];\n      if (!D(function (e) {\n        var t = {};\n        return t[\"text/plain\"] = e, t;\n      }(n))) throw new Error(\"writeText() failed\");\n      return [2];\n    });\n  });\n}\n\nfunction T() {\n  return e(this, void 0, void 0, function () {\n    return t(this, function (e) {\n      if (s) return r(\"Using `navigator.clipboard.readText()`.\"), [2, s()];\n      if (b()) return r(\"Reading text using IE strategy.\"), [2, y()];\n      throw new Error(\"Read is not supported in your browser.\");\n    });\n  });\n}\n\nexport { T as readText, o as setDebugLog, C as writeText };","map":{"version":3,"sources":["../../src/ClipboardItem/data-types.ts","../../src/debug.ts","../../src/globals.ts","../../src/strategies/internet-explorer.ts","../../src/strategies/dom.ts","../../src/implementations/write-fallback.ts","../../src/implementations/text.ts"],"names":["debugLogImpl","s","debugLog","setDebugLog","logFn","console","warn","log","apply","arguments","bind","originalNavigator","navigator","undefined","originalNavigatorClipboard","clipboard","read","originalNavigatorClipboardReadText","readText","write","originalNavigatorClipboardWriteText","writeText","originalWindow","window","ClipboardItem","ieWindow","seemToBeInIE","ClipboardEvent","clipboardData","setData","text","readTextIE","getData","Error","this","copyListener","tracker","data","e","success","type","value","preventDefault","execCopy","FallbackTracker","listener","document","addEventListener","execCommand","removeEventListener","copyUsingTempSelection","selectionSet","selectionClear","tempElem","createElement","setAttribute","textContent","body","appendChild","removeChild","str","spanParent","attachShadow","mode","span","innerText","result","elem","sel","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","writeFallback","stringItem","hasTextPlain","userAgent","indexOf","copyUsingTempElem","copyTextUsingDOM","stringToStringItem"],"mappings":"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","sourcesContent":["export const TEXT_PLAIN = \"text/plain\";\nexport const TEXT_HTML = \"text/html\";\n","/******** Debug Logging ********/\n\n// tslint:disable-next-line: no-empty\nlet debugLogImpl = (s: string) => {};\n\nexport function debugLog(s: string) {\n  debugLogImpl(s);\n}\n\nexport function setDebugLog(logFn: (s: string) => void) {\n  debugLogImpl = logFn;\n}\n\n/******** Warnings ********/\n\nlet showWarnings = true;\n\nexport function suppressWarnings() {\n  showWarnings = false;\n}\n\nexport function shouldShowWarnings(): boolean {\n  return showWarnings;\n}\n\n// Workaround for:\n// - IE9 (can't bind console functions directly), and\n// - Edge Issue #14495220 (referencing `console` without F12 Developer Tools can cause an exception)\nfunction warnOrLog() {\n  // tslint:disable-next-line: no-console\n  (console.warn || console.log).apply(console, arguments);\n}\n\nexport const warn = warnOrLog.bind(\"[clipboard-polyfill]\");\n","// We cache the references so that callers can do the following without causing infinite recursion/bugs:\n//\n//     import * as clipboard from \"clipboard-polyfill\";\n//     navigator.clipboard = clipboard;\n//\n//     import { ClipboardItem } from \"clipboard-polyfill\";\n//     window.ClipboardItem = clipboard;\n//\n// Note that per the spec:\n//\n// - is *not* possible to overwrite `navigator.clipboard`. https://www.w3.org/TR/clipboard-apis/#navigator-interface\n// - it *may* be possible to overwrite `window.ClipboardItem`.\n//\n// Chrome 83 and Safari 13.1 match this. We save the original\n// `navigator.clipboard` anyhow, because 1) it doesn't cost more code (in fact,\n// it probably saves code), and 2) just in case an unknown/future implementation\n// allows overwriting `navigator.clipboard` like this.\n\nimport {\n  ClipboardItemConstructor,\n  Clipboard,\n  ClipboardItems,\n} from \"./ClipboardItem/spec\";\n\nconst originalNavigator =\n  typeof navigator === \"undefined\" ? undefined : navigator;\nconst originalNavigatorClipboard:\n  | Clipboard\n  | undefined = originalNavigator?.clipboard as any;\nexport const originalNavigatorClipboardRead:\n  | (() => Promise<ClipboardItems>)\n  | undefined = originalNavigatorClipboard?.read?.bind(\n  originalNavigatorClipboard\n);\nexport const originalNavigatorClipboardReadText:\n  | (() => Promise<string>)\n  | undefined = originalNavigatorClipboard?.readText?.bind(\n  originalNavigatorClipboard\n);\nexport const originalNavigatorClipboardWrite:\n  | ((data: ClipboardItems) => Promise<void>)\n  | undefined = originalNavigatorClipboard?.write?.bind(\n  originalNavigatorClipboard\n);\nexport const originalNavigatorClipboardWriteText:\n  | ((data: string) => Promise<void>)\n  | undefined = originalNavigatorClipboard?.writeText?.bind(\n  originalNavigatorClipboard\n);\n\n// The spec specifies that this goes on `window`, not e.g. `globalThis`. It's not (currently) available in workers.\nexport const originalWindow =\n  typeof window === \"undefined\" ? undefined : window;\nexport const originalWindowClipboardItem: ClipboardItemConstructor | undefined =\n  originalWindow?.ClipboardItem;\n","import { originalWindow } from \"../globals\";\n\ninterface IEWindow extends Window {\n  clipboardData: {\n    setData: (key: string, value: string) => boolean;\n    // Always results in a string: https://msdn.microsoft.com/en-us/library/ms536436(v=vs.85).aspx\n    getData: (key: string) => string;\n  };\n}\n\nconst ieWindow = (originalWindow as unknown) as IEWindow;\n\nexport function seemToBeInIE(): boolean {\n  return (\n    typeof ClipboardEvent === \"undefined\" &&\n    typeof ieWindow.clipboardData !== \"undefined\" &&\n    typeof ieWindow.clipboardData.setData !== \"undefined\"\n  );\n}\n\nexport function writeTextIE(text: string): boolean {\n  // IE supports text or URL, but not HTML: https://msdn.microsoft.com/en-us/library/ms536744(v=vs.85).aspx\n  // TODO: Write URLs to `text/uri-list`? https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types\n  return ieWindow.clipboardData.setData(\"Text\", text);\n}\n\n// Returns \"\" if the read failed, e.g. because the user rejected the permission.\nexport async function readTextIE(): Promise<string> {\n  const text = ieWindow.clipboardData.getData(\"Text\");\n  if (text === \"\") {\n    throw new Error(\n      \"Empty clipboard or could not read plain text from clipboard\"\n    );\n  }\n  return text;\n}\n","import { StringItem } from \"../ClipboardItem/convert\";\nimport { TEXT_PLAIN } from \"../ClipboardItem/data-types\";\nimport { debugLog } from \"../debug\";\n\n/******** Implementations ********/\n\nclass FallbackTracker {\n  public success: boolean = false;\n}\n\nfunction copyListener(\n  tracker: FallbackTracker,\n  data: StringItem,\n  e: ClipboardEvent\n): void {\n  debugLog(\"listener called\");\n  tracker.success = true;\n  // tslint:disable-next-line: forin\n  for (const type in data) {\n    const value = data[type];\n    const clipboardData = e.clipboardData!;\n    clipboardData.setData(type, value);\n    if (type === TEXT_PLAIN && clipboardData.getData(type) !== value) {\n      debugLog(\"setting text/plain failed\");\n      tracker.success = false;\n    }\n  }\n  e.preventDefault();\n}\n\nexport function execCopy(data: StringItem): boolean {\n  const tracker = new FallbackTracker();\n  const listener = copyListener.bind(this, tracker, data);\n\n  document.addEventListener(\"copy\", listener);\n  try {\n    // We ignore the return value, since FallbackTracker tells us whether the\n    // listener was called. It seems that checking the return value here gives\n    // us no extra information in any browser.\n    document.execCommand(\"copy\");\n  } finally {\n    document.removeEventListener(\"copy\", listener);\n  }\n  return tracker.success;\n}\n\n// Temporarily select a DOM element, so that `execCommand()` is not rejected.\nexport function copyUsingTempSelection(\n  e: HTMLElement,\n  data: StringItem\n): boolean {\n  selectionSet(e);\n  const success = execCopy(data);\n  selectionClear();\n  return success;\n}\n\n// Create a temporary DOM element to select, so that `execCommand()` is not\n// rejected.\nexport function copyUsingTempElem(data: StringItem): boolean {\n  const tempElem = document.createElement(\"div\");\n  // Setting an individual property does not support `!important`, so we set the\n  // whole style instead of just the `-webkit-user-select` property.\n  tempElem.setAttribute(\"style\", \"-webkit-user-select: text !important\");\n  // Place some text in the elem so that Safari has something to select.\n  tempElem.textContent = \"temporary element\";\n  document.body.appendChild(tempElem);\n\n  const success = copyUsingTempSelection(tempElem, data);\n\n  document.body.removeChild(tempElem);\n  return success;\n}\n\n// Uses shadow DOM.\nexport function copyTextUsingDOM(str: string): boolean {\n  debugLog(\"copyTextUsingDOM\");\n\n  const tempElem = document.createElement(\"div\");\n  // Setting an individual property does not support `!important`, so we set the\n  // whole style instead of just the `-webkit-user-select` property.\n  tempElem.setAttribute(\"style\", \"-webkit-user-select: text !important\");\n  // Use shadow DOM if available.\n  let spanParent: Node = tempElem;\n  if (tempElem.attachShadow) {\n    debugLog(\"Using shadow DOM.\");\n    spanParent = tempElem.attachShadow({ mode: \"open\" });\n  }\n\n  const span = document.createElement(\"span\");\n  span.innerText = str;\n\n  spanParent.appendChild(span);\n  document.body.appendChild(tempElem);\n  selectionSet(span);\n\n  const result = document.execCommand(\"copy\");\n\n  selectionClear();\n  document.body.removeChild(tempElem);\n\n  return result;\n}\n\n/******** Selection ********/\n\nfunction selectionSet(elem: Element): void {\n  const sel = document.getSelection();\n  if (sel) {\n    const range = document.createRange();\n    range.selectNodeContents(elem);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n}\n\nfunction selectionClear(): void {\n  const sel = document.getSelection();\n  if (sel) {\n    sel.removeAllRanges();\n  }\n}\n","import { StringItem } from \"../ClipboardItem/convert\";\nimport { TEXT_PLAIN } from \"../ClipboardItem/data-types\";\nimport { debugLog } from \"../debug\";\nimport {\n  copyTextUsingDOM,\n  copyUsingTempElem,\n  copyUsingTempSelection,\n  execCopy,\n} from \"../strategies/dom\";\nimport { seemToBeInIE, writeTextIE } from \"../strategies/internet-explorer\";\n\n// Note: the fallback order is carefully tuned for compatibility. It might seem\n// safe to move some of them around, but do not do so without testing all browsers.\nexport async function writeFallback(stringItem: StringItem): Promise<boolean> {\n  const hasTextPlain = TEXT_PLAIN in stringItem;\n\n  // Internet Explorer\n  if (seemToBeInIE()) {\n    if (!hasTextPlain) {\n      throw new Error(\"No `text/plain` value was specified.\");\n    }\n    if (writeTextIE(stringItem[TEXT_PLAIN])) {\n      return true;\n    } else {\n      throw new Error(\"Copying failed, possibly because the user rejected it.\");\n    }\n  }\n\n  if (execCopy(stringItem)) {\n    debugLog(\"regular execCopy worked\");\n    return true;\n  }\n\n  // Success detection on Edge is not possible, due to bugs in all 4\n  // detection mechanisms we could try to use. Assume success.\n  if (navigator.userAgent.indexOf(\"Edge\") > -1) {\n    debugLog('UA \"Edge\" => assuming success');\n    return true;\n  }\n\n  // Fallback 1 for desktop Safari.\n  if (copyUsingTempSelection(document.body, stringItem)) {\n    debugLog(\"copyUsingTempSelection worked\");\n    return true;\n  }\n\n  // Fallback 2 for desktop Safari.\n  if (copyUsingTempElem(stringItem)) {\n    debugLog(\"copyUsingTempElem worked\");\n    return true;\n  }\n\n  // Fallback for iOS Safari.\n  if (copyTextUsingDOM(stringItem[TEXT_PLAIN])) {\n    debugLog(\"copyTextUsingDOM worked\");\n    return true;\n  }\n\n  return false;\n}\n","import { StringItem } from \"../ClipboardItem/convert\";\nimport { TEXT_PLAIN } from \"../ClipboardItem/data-types\";\nimport { debugLog } from \"../debug\";\nimport {\n  originalNavigatorClipboardReadText,\n  originalNavigatorClipboardWriteText,\n} from \"../globals\";\nimport { readTextIE, seemToBeInIE } from \"../strategies/internet-explorer\";\nimport { writeFallback } from \"./write-fallback\";\n\nfunction stringToStringItem(s: string): StringItem {\n  const stringItem: StringItem = {};\n  stringItem[TEXT_PLAIN] = s;\n  return stringItem;\n}\n\nexport async function writeText(s: string): Promise<void> {\n  // Use the browser implementation if it exists.\n  if (originalNavigatorClipboardWriteText) {\n    debugLog(\"Using `navigator.clipboard.writeText()`.\");\n    return originalNavigatorClipboardWriteText(s);\n  }\n\n  if (!writeFallback(stringToStringItem(s))) {\n    throw new Error(\"writeText() failed\");\n  }\n}\n\nexport async function readText(): Promise<string> {\n  // Use the browser implementation if it exists.\n  if (originalNavigatorClipboardReadText) {\n    debugLog(\"Using `navigator.clipboard.readText()`.\");\n    return originalNavigatorClipboardReadText();\n  }\n\n  // Fallback for IE.\n  if (seemToBeInIE()) {\n    debugLog(\"Reading text using IE strategy.\");\n    return readTextIE();\n  }\n\n  throw new Error(\"Read is not supported in your browser.\");\n}\n"]},"metadata":{},"sourceType":"module"}