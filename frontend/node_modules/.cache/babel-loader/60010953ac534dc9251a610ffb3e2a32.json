{"ast":null,"code":"import React, { forwardRef } from 'react';\n/**\r\n * Welcome to @reach/visually-hidden!\r\n *\r\n * Provides text for screen readers that is visually hidden.\r\n * It is the logical opposite of the `aria-hidden` attribute.\r\n *\r\n * @see https://snook.ca/archives/html_and_css/hiding-content-for-accessibility\r\n * @see https://a11yproject.com/posts/how-to-hide-content/\r\n * @see Docs     https://reach.tech/visually-hidden\r\n * @see Source   https://github.com/reach/reach-ui/tree/main/packages/visually-hidden\r\n */\n\n/**\r\n * VisuallyHidden\r\n *\r\n * Provides text for screen readers that is visually hidden.\r\n * It is the logical opposite of the `aria-hidden` attribute.\r\n */\n\nvar VisuallyHidden = /*#__PURE__*/forwardRef(function VisuallyHidden(props, ref) {\n  return React.createElement(\"span\", Object.assign({\n    ref: ref,\n    style: {\n      border: 0,\n      clip: \"rect(0 0 0 0)\",\n      height: \"1px\",\n      margin: \"-1px\",\n      overflow: \"hidden\",\n      padding: 0,\n      position: \"absolute\",\n      width: \"1px\",\n      // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n      whiteSpace: \"nowrap\",\n      wordWrap: \"normal\"\n    }\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  VisuallyHidden.displayName = \"VisuallyHidden\";\n}\n\nexport default VisuallyHidden;","map":{"version":3,"sources":["../src/index.tsx"],"names":["VisuallyHidden","forwardRef","React","ref","style","border","clip","height","margin","overflow","padding","position","width","whiteSpace","wordWrap"],"mappings":";AAAA;;;;;;;;;;;;AAcA;;;;;;;IAMMA,cAAc,GAAA,aAAGC,UAAU,CAG/B,SAAA,cAAA,CAAA,KAAA,EAAA,GAAA,EAAA;AACA,SACEC,KAAAA,CAAAA,aAAAA,CAAAA,MAAAA,EAAAA,MAAAA,CAAAA,MAAAA,CAAAA;AACEC,IAAAA,GAAG,EAAEA,GADPD;AAEEE,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EADD,CAAA;AAELC,MAAAA,IAAI,EAFC,eAAA;AAGLC,MAAAA,MAAM,EAHD,KAAA;AAILC,MAAAA,MAAM,EAJD,MAAA;AAKLC,MAAAA,QAAQ,EALH,QAAA;AAMLC,MAAAA,OAAO,EANF,CAAA;AAOLC,MAAAA,QAAQ,EAPH,UAAA;AAQLC,MAAAA,KAAK,EARA,KAAA;AAUL;AACAC,MAAAA,UAAU,EAXL,QAAA;AAYLC,MAAAA,QAAQ,EAAE;AAZL;AAFTZ,GAAAA,EADF,KACEA,CAAAA,CADF;AAJ+B,CAAA,C;;AA0BjC,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,EAAa;AACXF,EAAAA,cAAc,CAAdA,WAAAA,GAAAA,gBAAAA;AACD","sourcesContent":["/**\n * Welcome to @reach/visually-hidden!\n *\n * Provides text for screen readers that is visually hidden.\n * It is the logical opposite of the `aria-hidden` attribute.\n *\n * @see https://snook.ca/archives/html_and_css/hiding-content-for-accessibility\n * @see https://a11yproject.com/posts/how-to-hide-content/\n * @see Docs     https://reach.tech/visually-hidden\n * @see Source   https://github.com/reach/reach-ui/tree/main/packages/visually-hidden\n */\n\nimport React, { forwardRef } from \"react\";\n\n/**\n * VisuallyHidden\n *\n * Provides text for screen readers that is visually hidden.\n * It is the logical opposite of the `aria-hidden` attribute.\n */\nconst VisuallyHidden = forwardRef<\n  HTMLSpanElement,\n  React.HTMLAttributes<HTMLSpanElement>\n>(function VisuallyHidden(props, ref) {\n  return (\n    <span\n      ref={ref}\n      style={{\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: \"1px\",\n        margin: \"-1px\",\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        width: \"1px\",\n\n        // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe\n        whiteSpace: \"nowrap\",\n        wordWrap: \"normal\",\n      }}\n      {...props}\n    />\n  );\n});\n\nif (__DEV__) {\n  VisuallyHidden.displayName = \"VisuallyHidden\";\n}\n\nexport default VisuallyHidden;\n"]},"metadata":{},"sourceType":"module"}