{"ast":null,"code":"import React, { isValidElement, cloneElement, createContext, useRef, useState, useCallback, useEffect, useMemo } from 'react';\nexport { default as warning } from 'warning';\n/* eslint-disable no-restricted-globals, eqeqeq  */\n\n/**\r\n * React currently throws a warning when using useLayoutEffect on the server.\r\n * To get around it, we can conditionally useEffect on the server (no-op) and\r\n * useLayoutEffect in the browser. We occasionally need useLayoutEffect to\r\n * ensure we don't get a render flash for certain operations, but we may also\r\n * need affected components to render on the server. One example is when setting\r\n * a component's descendants to retrieve their index values.\r\n *\r\n * Important to note that using this hook as an escape hatch will break the\r\n * eslint dependency warnings unless you rename the import to `useLayoutEffect`.\r\n * Use sparingly only when the effect won't effect the rendered HTML to avoid\r\n * any server/client mismatch.\r\n *\r\n * If a useLayoutEffect is needed and the result would create a mismatch, it's\r\n * likely that the component in question shouldn't be rendered on the server at\r\n * all, so a better approach would be to lazily render those in a parent\r\n * component after client-side hydration.\r\n *\r\n * TODO: We are calling useLayoutEffect in a couple of places that will likely\r\n * cause some issues for SSR users, whether the warning shows or not. Audit and\r\n * fix these.\r\n *\r\n * https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\r\n * https://github.com/reduxjs/react-redux/blob/master/src/utils/useIsomorphicLayoutEffect.js\r\n *\r\n * @param effect\r\n * @param deps\r\n */\n\nvar useIsomorphicLayoutEffect = /*#__PURE__*/canUseDOM() ? React.useLayoutEffect : React.useEffect;\nvar checkedPkgs = {};\n/**\r\n * When in dev mode, checks that styles for a given @reach package are loaded.\r\n *\r\n * @param packageName Name of the package to check.\r\n * @example checkStyles(\"dialog\") will check for styles for @reach/dialog\r\n */\n// @ts-ignore\n\nvar checkStyles = noop;\n\nif (process.env.NODE_ENV !== \"production\") {\n  // In CJS files, process.env.NODE_ENV is stripped from our build, but we need\n  // it to prevent style checks from clogging up user logs while testing.\n  // This is a workaround until we can tweak the build a bit to accommodate.\n  var _ref = typeof process !== \"undefined\" ? process : {\n    env: {\n      NODE_ENV: \"development\"\n    }\n  },\n      env = _ref.env;\n\n  checkStyles = function checkStyles(packageName) {\n    // only check once per package\n    if (checkedPkgs[packageName]) return;\n    checkedPkgs[packageName] = true;\n\n    if (env.NODE_ENV !== \"test\" && parseInt(window.getComputedStyle(document.body).getPropertyValue(\"--reach-\" + packageName), 10) !== 1) {\n      console.warn(\"@reach/\" + packageName + \" styles not found. If you are using a bundler like webpack or parcel include this in the entry file of your app before any of your own styles:\\n\\n    import \\\"@reach/\" + packageName + \"/styles.css\\\";\\n\\n  Otherwise you'll need to include them some other way:\\n\\n    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"node_modules/@reach/\" + packageName + \"/styles.css\\\" />\\n\\n  For more information visit https://ui.reach.tech/styling.\\n  \");\n    }\n  };\n}\n/**\r\n * Ponyfill for the global object in some environments.\r\n *\r\n * @link https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\r\n */\n\n\nvar ponyfillGlobal = typeof window != \"undefined\" && window.Math == Math ? window : typeof self != \"undefined\" && self.Math == Math ? self :\n/*#__PURE__*/\n// eslint-disable-next-line no-new-func\nFunction(\"return this\")();\n/**\r\n * Passes or assigns an arbitrary value to a ref function or object.\r\n *\r\n * @param ref\r\n * @param value\r\n */\n\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n\n  if (isFunction(ref)) {\n    ref(value);\n  } else {\n    try {\n      ref.current = value;\n    } catch (error) {\n      throw new Error(\"Cannot assign value \\\"\" + value + \"\\\" to ref \\\"\" + ref + \"\\\"\");\n    }\n  }\n}\n/**\r\n * Checks true|\"true\" vs false|\"false\"\r\n *\r\n * @param value\r\n */\n\n\nfunction boolOrBoolString(value) {\n  return value === \"true\" ? true : isBoolean(value) ? value : false;\n}\n\nfunction canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n}\n/**\r\n * Type-safe clone element\r\n *\r\n * @param element\r\n * @param props\r\n * @param children\r\n */\n\n\nfunction cloneValidElement(element, props) {\n  for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    children[_key - 2] = arguments[_key];\n  }\n\n  return isValidElement(element) ? cloneElement.apply(void 0, [element, props].concat(children)) : element;\n}\n\nfunction createNamedContext(name, defaultValue) {\n  var Ctx = createContext(defaultValue);\n  Ctx.displayName = name;\n  return Ctx;\n}\n/**\r\n * This is a hack for sure. The thing is, getting a component to intelligently\r\n * infer props based on a component or JSX string passed into an `as` prop is\r\n * kind of a huge pain. Getting it to work and satisfy the constraints of\r\n * `forwardRef` seems dang near impossible. To avoid needing to do this awkward\r\n * type song-and-dance every time we want to forward a ref into a component\r\n * that accepts an `as` prop, we abstract all of that mess to this function for\r\n * the time time being.\r\n */\n\n\nfunction forwardRefWithAs(render) {\n  return React.forwardRef(render);\n}\n\nfunction memoWithAs(Component, propsAreEqual) {\n  return React.memo(Component, propsAreEqual);\n}\n/**\r\n * Get the size of the working document minus the scrollbar offset.\r\n *\r\n * @param element\r\n */\n\n\nfunction getDocumentDimensions(element) {\n  if (!canUseDOM()) return {\n    width: 0,\n    height: 0\n  };\n  var doc = element ? getOwnerDocument(element) : document;\n  var win = element ? getOwnerWindow(element) : window;\n  return {\n    width: doc.documentElement.clientWidth || win.innerWidth,\n    height: doc.documentElement.clientHeight || win.innerHeight\n  };\n}\n/**\r\n * Get the scoll position of the global window object relative to a given node.\r\n *\r\n * @param element\r\n */\n\n\nfunction getScrollPosition(element) {\n  if (!canUseDOM()) return {\n    scrollX: 0,\n    scrollY: 0\n  };\n  var win = element ? getOwnerWindow(element) : window;\n  return {\n    scrollX: win.scrollX,\n    scrollY: win.scrollY\n  };\n}\n/**\r\n * Get a computed style value by property, backwards compatible with IE\r\n * @param element\r\n * @param styleProp\r\n */\n\n\nfunction getElementComputedStyle(element, styleProp) {\n  var y = null;\n  var doc = getOwnerDocument(element);\n\n  if (element.currentStyle) {\n    y = element.currentStyle[styleProp];\n  } else if (doc && doc.defaultView && isFunction(doc.defaultView.getComputedStyle)) {\n    y = doc.defaultView.getComputedStyle(element, null).getPropertyValue(styleProp);\n  }\n\n  return y;\n}\n/**\r\n * Get an element's owner document. Useful when components are used in iframes\r\n * or other environments like dev tools.\r\n *\r\n * @param element\r\n */\n\n\nfunction getOwnerDocument(element) {\n  return element && element.ownerDocument ? element.ownerDocument : canUseDOM() ? document : null;\n}\n\nfunction getOwnerWindow(element) {\n  var doc = element ? getOwnerDocument(element) : null;\n  return doc ? doc.defaultView || window : null;\n}\n/**\r\n * Get the scrollbar offset distance.\r\n *\r\n * TODO: Remove in 1.0 (we used this in public examples)\r\n */\n\n\nfunction getScrollbarOffset() {\n  try {\n    if (window.innerWidth > document.documentElement.clientWidth) {\n      return window.innerWidth - document.documentElement.clientWidth;\n    }\n  } catch (err) {}\n\n  return 0;\n}\n/**\r\n * Checks whether or not a value is a boolean.\r\n *\r\n * @param value\r\n */\n\n\nfunction isBoolean(value) {\n  return typeof value === \"boolean\";\n}\n/**\r\n * Checks whether or not a value is a function.\r\n *\r\n * @param value\r\n */\n\n\nfunction isFunction(value) {\n  return !!(value && {}.toString.call(value) == \"[object Function]\");\n}\n/**\r\n * Checks whether or not a value is a number.\r\n *\r\n * @param value\r\n */\n\n\nfunction isNumber(value) {\n  return typeof value === \"number\" && !isNaN(value);\n}\n/**\r\n * Detects right clicks\r\n *\r\n * @param nativeEvent\r\n */\n\n\nfunction isRightClick(nativeEvent) {\n  return nativeEvent.which === 3 || nativeEvent.button === 2;\n}\n/**\r\n * Checks whether or not a value is a string.\r\n *\r\n * @param value\r\n */\n\n\nfunction isString(value) {\n  return typeof value === \"string\";\n}\n/**\r\n * Joins strings to format IDs for compound components.\r\n *\r\n * @param args\r\n */\n\n\nfunction makeId() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return args.filter(function (val) {\n    return val != null;\n  }).join(\"--\");\n}\n/**\r\n * No-op function.\r\n */\n\n\nfunction noop() {}\n/**\r\n * Convert our state strings for HTML data attributes.\r\n * No need for a fancy kebab-caser here, we know what our state strings are!\r\n *\r\n * @param state\r\n */\n\n\nfunction stateToAttributeString(state) {\n  return String(state).replace(/([\\s_]+)/g, \"-\").toLowerCase();\n}\n/**\r\n * Check if a component is controlled or uncontrolled and return the correct\r\n * state value and setter accordingly. If the component state is controlled by\r\n * the app, the setter is a noop.\r\n *\r\n * @param controlledValue\r\n * @param defaultValue\r\n */\n\n\nfunction useControlledState(controlledValue, defaultValue) {\n  var controlledRef = useRef(controlledValue != null);\n\n  var _useState = useState(defaultValue),\n      valueState = _useState[0],\n      setValue = _useState[1];\n\n  var set = useCallback(function (n) {\n    if (!controlledRef.current) {\n      setValue(n);\n    }\n  }, []);\n  return [controlledRef.current ? controlledValue : valueState, set];\n}\n/**\r\n * Logs a warning in dev mode when a component switches from controlled to\r\n * uncontrolled, or vice versa\r\n *\r\n * A single prop should typically be used to determine whether or not a\r\n * component is controlled or not.\r\n *\r\n * @param controlledValue\r\n * @param controlledPropName\r\n * @param componentName\r\n */\n\n\nvar useControlledSwitchWarning = noop;\n\nif (process.env.NODE_ENV !== \"production\") {\n  useControlledSwitchWarning = function useControlledSwitchWarning(controlledValue, controlledPropName, componentName) {\n    var controlledRef = useRef(controlledValue != null);\n    var nameCache = useRef({\n      componentName: componentName,\n      controlledPropName: controlledPropName\n    });\n    useEffect(function () {\n      nameCache.current = {\n        componentName: componentName,\n        controlledPropName: controlledPropName\n      };\n    }, [componentName, controlledPropName]);\n    useEffect(function () {\n      var wasControlled = controlledRef.current;\n      var _nameCache$current = nameCache.current,\n          componentName = _nameCache$current.componentName,\n          controlledPropName = _nameCache$current.controlledPropName;\n      var isControlled = controlledValue != null;\n\n      if (wasControlled !== isControlled) {\n        console.error(\"A component is changing an \" + (wasControlled ? \"\" : \"un\") + \"controlled `\" + controlledPropName + \"` state of \" + componentName + \" to be \" + (wasControlled ? \"un\" : \"\") + \"controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled \" + componentName + \" element for the lifetime of the component.\\nMore info: https://fb.me/react-controlled-components\");\n      }\n    }, [controlledValue]);\n  };\n}\n\nvar useCheckStyles = noop;\n\nif (process.env.NODE_ENV !== \"production\") {\n  useCheckStyles = function useCheckStyles(pkg) {\n    var name = useRef(pkg);\n    useEffect(function () {\n      return void (name.current = pkg);\n    }, [pkg]);\n    useEffect(function () {\n      return checkStyles(name.current);\n    }, []);\n  };\n}\n/**\r\n * React hook for creating a value exactly once.\r\n * @see https://github.com/Andarist/use-constant\r\n */\n\n\nfunction useConstant(fn) {\n  var ref = React.useRef();\n\n  if (!ref.current) {\n    ref.current = {\n      v: fn()\n    };\n  }\n\n  return ref.current.v;\n}\n/**\r\n * @param callback\r\n */\n\n\nfunction useEventCallback(callback) {\n  var ref = useRef(callback);\n  useIsomorphicLayoutEffect(function () {\n    ref.current = callback;\n  });\n  return useCallback(function (event) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    return ref.current.apply(ref, [event].concat(args));\n  }, []);\n}\n/**\r\n * @param callback\r\n */\n\n\nfunction useCallbackProp(callback) {\n  var ref = useRef(callback);\n  useEffect(function () {\n    ref.current = callback;\n  });\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, []);\n}\n/**\r\n * Adds a DOM event listener\r\n *\r\n * @param eventName\r\n * @param listener\r\n * @param element\r\n */\n\n\nfunction useEventListener(eventName, listener, element) {\n  if (element === void 0) {\n    element = window;\n  }\n\n  var savedHandler = useRef(listener);\n  useEffect(function () {\n    savedHandler.current = listener;\n  }, [listener]);\n  useEffect(function () {\n    var isSupported = element && element.addEventListener;\n\n    if (!isSupported) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn(\"Event listener not supported on the element provided\");\n      }\n\n      return;\n    }\n\n    function eventListener(event) {\n      savedHandler.current(event);\n    }\n\n    element.addEventListener(eventName, eventListener);\n    return function () {\n      element.removeEventListener(eventName, eventListener);\n    };\n  }, [eventName, element]);\n}\n/**\r\n * Detect when focus changes in our document.\r\n *\r\n * @param handleChange\r\n * @param when\r\n * @param ownerDocument\r\n */\n\n\nfunction useFocusChange(handleChange, when, ownerDocument) {\n  if (handleChange === void 0) {\n    handleChange = console.log;\n  }\n\n  if (when === void 0) {\n    when = \"focus\";\n  }\n\n  if (ownerDocument === void 0) {\n    ownerDocument = document;\n  }\n\n  var lastActiveElement = useRef(ownerDocument.activeElement);\n  useEffect(function () {\n    lastActiveElement.current = ownerDocument.activeElement;\n\n    function onChange(event) {\n      if (lastActiveElement.current !== ownerDocument.activeElement) {\n        handleChange(ownerDocument.activeElement, lastActiveElement.current, event);\n        lastActiveElement.current = ownerDocument.activeElement;\n      }\n    }\n\n    ownerDocument.addEventListener(when, onChange, true);\n    return function () {\n      ownerDocument.removeEventListener(when, onChange);\n    };\n  }, [when, handleChange, ownerDocument]);\n}\n/**\r\n * Passes or assigns a value to multiple refs (typically a DOM node). Useful for\r\n * dealing with components that need an explicit ref for DOM calculations but\r\n * also forwards refs assigned by an app.\r\n *\r\n * @param refs Refs to fork\r\n */\n\n\nfunction useForkedRef() {\n  for (var _len4 = arguments.length, refs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    refs[_key4] = arguments[_key4];\n  }\n\n  return useMemo(function () {\n    if (refs.every(function (ref) {\n      return ref == null;\n    })) {\n      return null;\n    }\n\n    return function (node) {\n      refs.forEach(function (ref) {\n        assignRef(ref, node);\n      });\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [].concat(refs));\n}\n/**\r\n * Returns the previous value of a reference after a component update.\r\n *\r\n * @param value\r\n */\n\n\nfunction usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n/**\r\n * Call an effect after a component update, skipping the initial mount.\r\n *\r\n * @param effect Effect to call\r\n * @param deps Effect dependency list\r\n */\n\n\nfunction useUpdateEffect(effect, deps) {\n  var mounted = useRef(false);\n  useEffect(function () {\n    if (mounted.current) {\n      effect();\n    } else {\n      mounted.current = true;\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, deps);\n}\n/**\r\n * Just a lil state logger\r\n *\r\n * @param state\r\n * @param DEBUG\r\n */\n\n\nvar useStateLogger = noop;\n\nif (process.env.NODE_ENV !== \"production\") {\n  useStateLogger = function useStateLogger(state, DEBUG) {\n    if (DEBUG === void 0) {\n      DEBUG = false;\n    }\n\n    var debugRef = useRef(DEBUG);\n    useEffect(function () {\n      debugRef.current = DEBUG;\n    }, [DEBUG]);\n    useEffect(function () {\n      if (debugRef.current) {\n        console.group(\"State Updated\");\n        console.log(\"%c\" + state, \"font-weight: normal; font-size: 120%; font-style: italic;\");\n        console.groupEnd();\n      }\n    }, [state]);\n  };\n}\n/**\r\n * Wraps a lib-defined event handler and a user-defined event handler, returning\r\n * a single handler that allows a user to prevent lib-defined handlers from\r\n * firing.\r\n *\r\n * @param theirHandler User-supplied event handler\r\n * @param ourHandler Library-supplied event handler\r\n */\n\n\nfunction wrapEvent(theirHandler, ourHandler) {\n  return function (event) {\n    theirHandler && theirHandler(event);\n\n    if (!event.defaultPrevented) {\n      return ourHandler(event);\n    }\n  };\n}\n\nexport { assignRef, boolOrBoolString, canUseDOM, checkStyles, cloneValidElement, createNamedContext, forwardRefWithAs, getDocumentDimensions, getElementComputedStyle, getOwnerDocument, getOwnerWindow, getScrollPosition, getScrollbarOffset, isBoolean, isFunction, isNumber, isRightClick, isString, makeId, memoWithAs, noop, ponyfillGlobal, stateToAttributeString, useCallbackProp, useCheckStyles, useConstant, useControlledState, useControlledSwitchWarning, useEventCallback, useEventListener, useFocusChange, useForkedRef, useIsomorphicLayoutEffect, usePrevious, useStateLogger, useUpdateEffect, wrapEvent };","map":{"version":3,"sources":["../src/index.tsx"],"names":["useIsomorphicLayoutEffect","canUseDOM","React","useEffect","checkedPkgs","checkStyles","noop","env","NODE_ENV","parseInt","window","document","console","ponyfillGlobal","self","Function","assignRef","ref","value","isFunction","boolOrBoolString","isBoolean","cloneValidElement","element","props","children","isValidElement","cloneElement","createNamedContext","name","defaultValue","Ctx","createContext","forwardRefWithAs","render","memoWithAs","Component","propsAreEqual","getDocumentDimensions","width","height","doc","getOwnerDocument","win","getOwnerWindow","innerHeight","getScrollPosition","scrollX","scrollY","getElementComputedStyle","styleProp","y","getScrollbarOffset","isNumber","isNaN","isRightClick","nativeEvent","isString","makeId","args","val","stateToAttributeString","state","String","useControlledState","controlledValue","controlledRef","useRef","valueState","setValue","useState","set","useCallback","useControlledSwitchWarning","nameCache","componentName","controlledPropName","current","wasControlled","isControlled","useCheckStyles","useConstant","fn","v","useEventCallback","callback","useCallbackProp","useEventListener","eventName","listener","savedHandler","isSupported","useFocusChange","handleChange","log","when","ownerDocument","lastActiveElement","useForkedRef","refs","useMemo","usePrevious","useUpdateEffect","effect","deps","mounted","useStateLogger","DEBUG","debugRef","wrapEvent","theirHandler","ourHandler","event"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-globals, eqeqeq  */\n\nimport React, {\n  cloneElement,\n  createContext,\n  isValidElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport warning from \"warning\";\nimport {\n  As,\n  AssignableRef,\n  ComponentWithAs,\n  ComponentWithForwardedRef,\n  DistributiveOmit,\n  ElementByTag,\n  ElementTagNameMap,\n  ForwardRefExoticComponentWithAs,\n  ForwardRefWithAsRenderFunction,\n  FunctionComponentWithAs,\n  MemoExoticComponentWithAs,\n  PropsFromAs,\n  PropsWithAs,\n  SingleOrArray,\n  ThenArg,\n} from \"./types\";\n\n/**\n * React currently throws a warning when using useLayoutEffect on the server.\n * To get around it, we can conditionally useEffect on the server (no-op) and\n * useLayoutEffect in the browser. We occasionally need useLayoutEffect to\n * ensure we don't get a render flash for certain operations, but we may also\n * need affected components to render on the server. One example is when setting\n * a component's descendants to retrieve their index values.\n *\n * Important to note that using this hook as an escape hatch will break the\n * eslint dependency warnings unless you rename the import to `useLayoutEffect`.\n * Use sparingly only when the effect won't effect the rendered HTML to avoid\n * any server/client mismatch.\n *\n * If a useLayoutEffect is needed and the result would create a mismatch, it's\n * likely that the component in question shouldn't be rendered on the server at\n * all, so a better approach would be to lazily render those in a parent\n * component after client-side hydration.\n *\n * TODO: We are calling useLayoutEffect in a couple of places that will likely\n * cause some issues for SSR users, whether the warning shows or not. Audit and\n * fix these.\n *\n * https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * https://github.com/reduxjs/react-redux/blob/master/src/utils/useIsomorphicLayoutEffect.js\n *\n * @param effect\n * @param deps\n */\nexport const useIsomorphicLayoutEffect = canUseDOM()\n  ? React.useLayoutEffect\n  : React.useEffect;\n\nlet checkedPkgs: { [key: string]: boolean } = {};\n\n/**\n * Copy of Facebook's warning package.\n */\nexport { warning };\n\n/**\n * When in dev mode, checks that styles for a given @reach package are loaded.\n *\n * @param packageName Name of the package to check.\n * @example checkStyles(\"dialog\") will check for styles for @reach/dialog\n */\n// @ts-ignore\nlet checkStyles: (packageName: string) => void = noop;\n\nif (__DEV__) {\n  // In CJS files, process.env.NODE_ENV is stripped from our build, but we need\n  // it to prevent style checks from clogging up user logs while testing.\n  // This is a workaround until we can tweak the build a bit to accommodate.\n  let { env } =\n    typeof process !== \"undefined\"\n      ? process\n      : { env: { NODE_ENV: \"development\" } };\n\n  checkStyles = function checkStyles(packageName: string) {\n    // only check once per package\n    if (checkedPkgs[packageName]) return;\n    checkedPkgs[packageName] = true;\n\n    if (\n      env.NODE_ENV !== \"test\" &&\n      parseInt(\n        window\n          .getComputedStyle(document.body)\n          .getPropertyValue(`--reach-${packageName}`),\n        10\n      ) !== 1\n    ) {\n      console.warn(\n        `@reach/${packageName} styles not found. If you are using a bundler like webpack or parcel include this in the entry file of your app before any of your own styles:\n\n    import \"@reach/${packageName}/styles.css\";\n\n  Otherwise you'll need to include them some other way:\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"node_modules/@reach/${packageName}/styles.css\" />\n\n  For more information visit https://ui.reach.tech/styling.\n  `\n      );\n    }\n  };\n}\n\nexport { checkStyles };\n\n/**\n * Ponyfill for the global object in some environments.\n *\n * @link https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n */\nexport const ponyfillGlobal =\n  typeof window != \"undefined\" && window.Math == Math\n    ? window\n    : typeof self != \"undefined\" && self.Math == Math\n    ? self\n    : // eslint-disable-next-line no-new-func\n      Function(\"return this\")();\n\n/**\n * Passes or assigns an arbitrary value to a ref function or object.\n *\n * @param ref\n * @param value\n */\nexport function assignRef<RefValueType = any>(\n  ref: AssignableRef<RefValueType> | null | undefined,\n  value: any\n) {\n  if (ref == null) return;\n  if (isFunction(ref)) {\n    ref(value);\n  } else {\n    try {\n      ref.current = value;\n    } catch (error) {\n      throw new Error(`Cannot assign value \"${value}\" to ref \"${ref}\"`);\n    }\n  }\n}\n\n/**\n * Checks true|\"true\" vs false|\"false\"\n *\n * @param value\n */\nexport function boolOrBoolString(value: any): value is \"true\" | true {\n  return value === \"true\" ? true : isBoolean(value) ? value : false;\n}\n\nexport function canUseDOM() {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n  );\n}\n\n/**\n * Type-safe clone element\n *\n * @param element\n * @param props\n * @param children\n */\nexport function cloneValidElement<Props>(\n  element: React.ReactElement<Props> | React.ReactNode,\n  props?: Partial<Props> & React.Attributes,\n  ...children: React.ReactNode[]\n): React.ReactElement<Props> | React.ReactNode {\n  return isValidElement(element)\n    ? cloneElement(element, props, ...children)\n    : element;\n}\n\nexport function createNamedContext<ContextValueType>(\n  name: string,\n  defaultValue: ContextValueType\n): React.Context<ContextValueType> {\n  const Ctx = createContext<ContextValueType>(defaultValue);\n  Ctx.displayName = name;\n  return Ctx;\n}\n\n/**\n * This is a hack for sure. The thing is, getting a component to intelligently\n * infer props based on a component or JSX string passed into an `as` prop is\n * kind of a huge pain. Getting it to work and satisfy the constraints of\n * `forwardRef` seems dang near impossible. To avoid needing to do this awkward\n * type song-and-dance every time we want to forward a ref into a component\n * that accepts an `as` prop, we abstract all of that mess to this function for\n * the time time being.\n */\nexport function forwardRefWithAs<Props, ComponentType extends As = \"div\">(\n  render: ForwardRefWithAsRenderFunction<ComponentType, Props>\n) {\n  return React.forwardRef(render) as ForwardRefExoticComponentWithAs<\n    ComponentType,\n    Props\n  >;\n}\n\nexport function memoWithAs<Props, ComponentType extends As = \"div\">(\n  Component: FunctionComponentWithAs<ComponentType, Props>,\n  propsAreEqual?: (\n    prevProps: Readonly<React.PropsWithChildren<Props>>,\n    nextProps: Readonly<React.PropsWithChildren<Props>>\n  ) => boolean\n) {\n  return React.memo(Component, propsAreEqual) as MemoExoticComponentWithAs<\n    ComponentType,\n    Props\n  >;\n}\n\n/**\n * Get the size of the working document minus the scrollbar offset.\n *\n * @param element\n */\nexport function getDocumentDimensions(\n  element?: HTMLElement | null | undefined\n) {\n  if (!canUseDOM()) return { width: 0, height: 0 };\n  let doc = element ? getOwnerDocument(element)! : document;\n  let win = element ? getOwnerWindow(element)! : window;\n  return {\n    width: doc.documentElement.clientWidth || win.innerWidth,\n    height: doc.documentElement.clientHeight || win.innerHeight,\n  };\n}\n\n/**\n * Get the scoll position of the global window object relative to a given node.\n *\n * @param element\n */\nexport function getScrollPosition(element?: HTMLElement | null | undefined) {\n  if (!canUseDOM()) return { scrollX: 0, scrollY: 0 };\n  let win = element ? getOwnerWindow(element)! : window;\n  return {\n    scrollX: win.scrollX,\n    scrollY: win.scrollY,\n  };\n}\n\n/**\n * Get a computed style value by property, backwards compatible with IE\n * @param element\n * @param styleProp\n */\nexport function getElementComputedStyle(\n  element: HTMLElement & {\n    currentStyle?: Record<string, string>;\n  },\n  styleProp: string\n) {\n  let y: string | null = null;\n  let doc = getOwnerDocument(element);\n  if (element.currentStyle) {\n    y = element.currentStyle[styleProp];\n  } else if (\n    doc &&\n    doc.defaultView &&\n    isFunction(doc.defaultView.getComputedStyle)\n  ) {\n    y = doc.defaultView\n      .getComputedStyle(element, null)\n      .getPropertyValue(styleProp);\n  }\n  return y;\n}\n\n/**\n * Get an element's owner document. Useful when components are used in iframes\n * or other environments like dev tools.\n *\n * @param element\n */\nexport function getOwnerDocument<T extends HTMLElement = HTMLElement>(\n  element: T | null\n) {\n  return element && element.ownerDocument\n    ? element.ownerDocument\n    : canUseDOM()\n    ? document\n    : null;\n}\n\nexport function getOwnerWindow<T extends HTMLElement = HTMLElement>(\n  element: T | null\n) {\n  let doc = element ? getOwnerDocument(element) : null;\n  return doc ? doc.defaultView || window : null;\n}\n\n/**\n * Get the scrollbar offset distance.\n *\n * TODO: Remove in 1.0 (we used this in public examples)\n */\nexport function getScrollbarOffset() {\n  try {\n    if (window.innerWidth > document.documentElement.clientWidth) {\n      return window.innerWidth - document.documentElement.clientWidth;\n    }\n  } catch (err) {}\n  return 0;\n}\n\n/**\n * Checks whether or not a value is a boolean.\n *\n * @param value\n */\nexport function isBoolean(value: any): value is boolean {\n  return typeof value === \"boolean\";\n}\n\n/**\n * Checks whether or not a value is a function.\n *\n * @param value\n */\nexport function isFunction(value: any): value is Function {\n  return !!(value && {}.toString.call(value) == \"[object Function]\");\n}\n\n/**\n * Checks whether or not a value is a number.\n *\n * @param value\n */\nexport function isNumber(value: any): value is number {\n  return typeof value === \"number\" && !isNaN(value);\n}\n\n/**\n * Detects right clicks\n *\n * @param nativeEvent\n */\nexport function isRightClick(nativeEvent: MouseEvent) {\n  return nativeEvent.which === 3 || nativeEvent.button === 2;\n}\n\n/**\n * Checks whether or not a value is a string.\n *\n * @param value\n */\nexport function isString(value: any): value is string {\n  return typeof value === \"string\";\n}\n\n/**\n * Joins strings to format IDs for compound components.\n *\n * @param args\n */\nexport function makeId(...args: (string | number | null | undefined)[]) {\n  return args.filter((val) => val != null).join(\"--\");\n}\n\n/**\n * No-op function.\n */\nexport function noop(): void {}\n\n/**\n * Convert our state strings for HTML data attributes.\n * No need for a fancy kebab-caser here, we know what our state strings are!\n *\n * @param state\n */\nexport function stateToAttributeString(state: any) {\n  return String(state)\n    .replace(/([\\s_]+)/g, \"-\")\n    .toLowerCase();\n}\n\n/**\n * Check if a component is controlled or uncontrolled and return the correct\n * state value and setter accordingly. If the component state is controlled by\n * the app, the setter is a noop.\n *\n * @param controlledValue\n * @param defaultValue\n */\nexport function useControlledState<T = any>(\n  controlledValue: T | undefined,\n  defaultValue: T\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  let controlledRef = useRef(controlledValue != null);\n  let [valueState, setValue] = useState(defaultValue);\n  let set: React.Dispatch<React.SetStateAction<T>> = useCallback((n) => {\n    if (!controlledRef.current) {\n      setValue(n);\n    }\n  }, []);\n  return [controlledRef.current ? (controlledValue as T) : valueState, set];\n}\n\n/**\n * Logs a warning in dev mode when a component switches from controlled to\n * uncontrolled, or vice versa\n *\n * A single prop should typically be used to determine whether or not a\n * component is controlled or not.\n *\n * @param controlledValue\n * @param controlledPropName\n * @param componentName\n */\nlet useControlledSwitchWarning: (\n  controlledValue: any,\n  controlledPropName: string,\n  componentName: string\n) => void = noop;\n\nif (__DEV__) {\n  useControlledSwitchWarning = function useControlledSwitchWarning(\n    controlledValue,\n    controlledPropName,\n    componentName\n  ) {\n    let controlledRef = useRef(controlledValue != null);\n    let nameCache = useRef({ componentName, controlledPropName });\n    useEffect(() => {\n      nameCache.current = { componentName, controlledPropName };\n    }, [componentName, controlledPropName]);\n\n    useEffect(() => {\n      let { current: wasControlled } = controlledRef;\n      let { componentName, controlledPropName } = nameCache.current;\n      let isControlled = controlledValue != null;\n      if (wasControlled !== isControlled) {\n        console.error(\n          `A component is changing an ${\n            wasControlled ? \"\" : \"un\"\n          }controlled \\`${controlledPropName}\\` state of ${componentName} to be ${\n            wasControlled ? \"un\" : \"\"\n          }controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled ${componentName} element for the lifetime of the component.\nMore info: https://fb.me/react-controlled-components`\n        );\n      }\n    }, [controlledValue]);\n  };\n}\n\nexport { useControlledSwitchWarning };\n\nlet useCheckStyles: (packageName: string) => void = noop;\n\nif (__DEV__) {\n  useCheckStyles = function useCheckStyles(pkg: string) {\n    let name = useRef(pkg);\n    useEffect(() => void (name.current = pkg), [pkg]);\n    useEffect(() => checkStyles(name.current), []);\n  };\n}\n\nexport { useCheckStyles };\n\n/**\n * React hook for creating a value exactly once.\n * @see https://github.com/Andarist/use-constant\n */\nexport function useConstant<ValueType>(fn: () => ValueType): ValueType {\n  const ref = React.useRef<{ v: ValueType }>();\n  if (!ref.current) {\n    ref.current = { v: fn() };\n  }\n  return ref.current.v;\n}\n\n/**\n * @param callback\n */\nexport function useEventCallback<E extends Event | React.SyntheticEvent>(\n  callback: (event: E, ...args: any[]) => void\n) {\n  const ref = useRef(callback);\n  useIsomorphicLayoutEffect(() => {\n    ref.current = callback;\n  });\n  return useCallback(\n    (event: E, ...args: any[]) => ref.current(event, ...args),\n    []\n  );\n}\n\n/**\n * @param callback\n */\nexport function useCallbackProp<F extends Function>(callback: F | undefined) {\n  const ref = useRef(callback);\n  useEffect(() => {\n    ref.current = callback;\n  });\n  return (useCallback(\n    (...args: any[]) => ref.current && ref.current(...args),\n    []\n  ) as unknown) as F;\n}\n\n/**\n * Adds a DOM event listener\n *\n * @param eventName\n * @param listener\n * @param element\n */\nexport function useEventListener<K extends keyof WindowEventMap>(\n  eventName: K,\n  listener: (event: WindowEventMap[K]) => any,\n  element: HTMLElement | Document | Window | EventTarget = window\n) {\n  const savedHandler = useRef(listener);\n  useEffect(() => {\n    savedHandler.current = listener;\n  }, [listener]);\n\n  useEffect(() => {\n    const isSupported = element && element.addEventListener;\n    if (!isSupported) {\n      if (__DEV__) {\n        console.warn(\"Event listener not supported on the element provided\");\n      }\n      return;\n    }\n\n    function eventListener(event: WindowEventMap[K]) {\n      savedHandler.current(event);\n    }\n\n    element.addEventListener(eventName, eventListener as any);\n    return () => {\n      element.removeEventListener(eventName, eventListener as any);\n    };\n  }, [eventName, element]);\n}\n\n/**\n * Detect when focus changes in our document.\n *\n * @param handleChange\n * @param when\n * @param ownerDocument\n */\nexport function useFocusChange(\n  handleChange: (\n    activeElement: Element | null,\n    previousActiveElement: Element | null,\n    event?: FocusEvent\n  ) => void = console.log,\n  when: \"focus\" | \"blur\" = \"focus\",\n  ownerDocument: Document = document\n) {\n  let lastActiveElement = useRef(ownerDocument.activeElement);\n\n  useEffect(() => {\n    lastActiveElement.current = ownerDocument.activeElement;\n\n    function onChange(event: FocusEvent) {\n      if (lastActiveElement.current !== ownerDocument.activeElement) {\n        handleChange(\n          ownerDocument.activeElement,\n          lastActiveElement.current,\n          event\n        );\n        lastActiveElement.current = ownerDocument.activeElement;\n      }\n    }\n\n    ownerDocument.addEventListener(when, onChange, true);\n\n    return () => {\n      ownerDocument.removeEventListener(when, onChange);\n    };\n  }, [when, handleChange, ownerDocument]);\n}\n\n/**\n * Passes or assigns a value to multiple refs (typically a DOM node). Useful for\n * dealing with components that need an explicit ref for DOM calculations but\n * also forwards refs assigned by an app.\n *\n * @param refs Refs to fork\n */\nexport function useForkedRef<RefValueType = any>(\n  ...refs: (AssignableRef<RefValueType> | null | undefined)[]\n) {\n  return useMemo(() => {\n    if (refs.every((ref) => ref == null)) {\n      return null;\n    }\n    return (node: any) => {\n      refs.forEach((ref) => {\n        assignRef(ref, node);\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [...refs]);\n}\n\n/**\n * Returns the previous value of a reference after a component update.\n *\n * @param value\n */\nexport function usePrevious<ValueType = any>(value: ValueType) {\n  const ref = useRef<ValueType | null>(null);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\n/**\n * Call an effect after a component update, skipping the initial mount.\n *\n * @param effect Effect to call\n * @param deps Effect dependency list\n */\nexport function useUpdateEffect(\n  effect: React.EffectCallback,\n  deps?: React.DependencyList\n) {\n  const mounted = useRef(false);\n  useEffect(() => {\n    if (mounted.current) {\n      effect();\n    } else {\n      mounted.current = true;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n\n/**\n * Just a lil state logger\n *\n * @param state\n * @param DEBUG\n */\nlet useStateLogger: (state: string, DEBUG: boolean) => void = noop;\n\nif (__DEV__) {\n  useStateLogger = function useStateLogger(state, DEBUG = false) {\n    let debugRef = useRef(DEBUG);\n    useEffect(() => {\n      debugRef.current = DEBUG;\n    }, [DEBUG]);\n    useEffect(() => {\n      if (debugRef.current) {\n        console.group(\"State Updated\");\n        console.log(\n          \"%c\" + state,\n          \"font-weight: normal; font-size: 120%; font-style: italic;\"\n        );\n        console.groupEnd();\n      }\n    }, [state]);\n  };\n}\n\nexport { useStateLogger };\n\n/**\n * Wraps a lib-defined event handler and a user-defined event handler, returning\n * a single handler that allows a user to prevent lib-defined handlers from\n * firing.\n *\n * @param theirHandler User-supplied event handler\n * @param ourHandler Library-supplied event handler\n */\nexport function wrapEvent<EventType extends React.SyntheticEvent | Event>(\n  theirHandler: ((event: EventType) => any) | undefined,\n  ourHandler: (event: EventType) => any\n): (event: EventType) => any {\n  return (event) => {\n    theirHandler && theirHandler(event);\n    if (!event.defaultPrevented) {\n      return ourHandler(event);\n    }\n  };\n}\n\n// Export types\nexport {\n  As,\n  AssignableRef,\n  ComponentWithAs,\n  ComponentWithForwardedRef,\n  DistributiveOmit,\n  ElementByTag,\n  ElementTagNameMap,\n  ForwardRefExoticComponentWithAs,\n  FunctionComponentWithAs,\n  MemoExoticComponentWithAs,\n  PropsFromAs,\n  PropsWithAs,\n  SingleOrArray,\n  ThenArg,\n};\n"]},"metadata":{},"sourceType":"module"}