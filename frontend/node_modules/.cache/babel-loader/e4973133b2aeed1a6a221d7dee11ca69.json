{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/swayne/Documents/reactprojects/spotifyAPI/my-app/frontend/src/pages/songPage.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ServiceGrid from '../models/serviceGrid';\nimport { Box, ChakraProvider, Image, Center, Button, Divider, Skeleton, Alert, AlertIcon, useDisclosure, Fade } from \"@chakra-ui/react\";\nimport { LinkIcon } from '@chakra-ui/icons';\nimport { useParams } from 'react-router-dom';\nimport * as clipboard from \"clipboard-polyfill/text\";\n\nconst SongPage = props => {\n  _s();\n\n  const [imgLink, setImgLink] = useState('');\n  const [spotifyLink, setSpotifyLink] = useState('');\n  const [soundCloudLink, setSoundCloudLink] = useState('');\n  const [youtubeLink, setYoutubeLink] = useState('');\n  const [appleMusicLink, setAppleMusicLink] = useState('');\n  const [showSkeleton, setShowSkeleton] = useState(false);\n  const {\n    id\n  } = useParams();\n  const {\n    isOpen,\n    onToggle\n  } = useDisclosure();\n  const SPOTIFYGRADIENT = \"linear(to-l, #1DB954,#1DB954)\";\n  const SCGRADIENT = \"linear(to-l, #ff9940,#ff7700)\";\n  const YOUTUBEGRADIENT = \"linear(to-l, #cc0000,#ff1a1a)\";\n  const APPLEMUSICGRADIENT = \"linear(to-l, #b166cc,#69a6f9)\";\n  const currentUrl = 'http://localhost:3000';\n  const url = 'http://localhost:5000/songs/';\n\n  function handler() {\n    clipboard.writeText(currentUrl + '/song/' + id).then(() => {\n      onToggle();\n    }, () => {\n      console.log(\"error!\");\n    });\n  }\n\n  const getAllSongs = () => {\n    axios.get(url + id).then(function (response) {\n      console.log(\"values\");\n      let values = response.data[0].values[0];\n      setImgLink(values.imglink);\n      setSpotifyLink(values.spotify);\n      setSoundCloudLink(values.soundCloud);\n      setYoutubeLink(values.youtube);\n      setAppleMusicLink(values.appleMusic); // handle success\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  };\n\n  const showSkeletonOnLoad = () => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        setShowSkeleton(true);\n        resolve();\n      }, 1500);\n    });\n  };\n\n  useEffect(() => {\n    showSkeletonOnLoad();\n    getAllSongs();\n  }, []);\n\n  const display = () => {\n    return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n      children: [/*#__PURE__*/_jsxDEV(Fade, {\n        initialScale: 0.9,\n        in: isOpen,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          status: \"success\",\n          children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), \"Link copied!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        style: {\n          display: \"flex\",\n          position: \"absolute\",\n          size: \"cover\",\n          filter: \"blur(22px)\",\n          overflow: \"hidden\",\n          width: '100vw',\n          height: '100vh'\n        },\n        src: imgLink\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        style: {\n          position: 'absolute',\n          left: '50%',\n          transform: 'translate(-50%)'\n        },\n        m: 2,\n        p: \"10px\",\n        rounded: \"20px\",\n        boxShadow: \"lg\",\n        border: \"1px\",\n        borderColor: \"gray.200\",\n        w: [250, 300, 350, 380],\n        bg: \"white\",\n        children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n          isLoaded: showSkeleton,\n          rounded: \"10px\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            rounded: \"10px\",\n            w: \"100%\",\n            src: imgLink\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          mt: \"20px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this), spotifyLink === undefined ? '' : /*#__PURE__*/_jsxDEV(ServiceGrid, {\n          name: \"Spotify\",\n          bgGradient: SPOTIFYGRADIENT,\n          serviceLink: spotifyLink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), soundCloudLink === undefined ? '' : /*#__PURE__*/_jsxDEV(ServiceGrid, {\n          name: \"SoundCloud\",\n          bgGradient: SCGRADIENT,\n          serviceLink: soundCloudLink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), youtubeLink === undefined ? '' : /*#__PURE__*/_jsxDEV(ServiceGrid, {\n          name: \"Youtube\",\n          bgGradient: YOUTUBEGRADIENT,\n          serviceLink: youtubeLink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }, this), appleMusicLink === undefined ? '' : /*#__PURE__*/_jsxDEV(ServiceGrid, {\n          name: \"Apple Music\",\n          bgGradient: APPLEMUSICGRADIENT,\n          serviceLink: appleMusicLink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Center, {\n          children: /*#__PURE__*/_jsxDEV(Skeleton, {\n            isLoaded: showSkeleton,\n            rounded: \"10px\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handler,\n              mt: 8,\n              children: [\"Share! \\xA0\", /*#__PURE__*/_jsxDEV(LinkIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: display(props)\n  }, void 0, false);\n};\n\n_s(SongPage, \"IBryiZPtzC5B3LA/P9WKjexRrzY=\", false, function () {\n  return [useParams, useDisclosure];\n});\n\n_c = SongPage;\nexport default SongPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongPage\");","map":{"version":3,"sources":["/home/swayne/Documents/reactprojects/spotifyAPI/my-app/frontend/src/pages/songPage.js"],"names":["React","useState","useEffect","axios","ServiceGrid","Box","ChakraProvider","Image","Center","Button","Divider","Skeleton","Alert","AlertIcon","useDisclosure","Fade","LinkIcon","useParams","clipboard","SongPage","props","imgLink","setImgLink","spotifyLink","setSpotifyLink","soundCloudLink","setSoundCloudLink","youtubeLink","setYoutubeLink","appleMusicLink","setAppleMusicLink","showSkeleton","setShowSkeleton","id","isOpen","onToggle","SPOTIFYGRADIENT","SCGRADIENT","YOUTUBEGRADIENT","APPLEMUSICGRADIENT","currentUrl","url","handler","writeText","then","console","log","getAllSongs","get","response","values","data","imglink","spotify","soundCloud","youtube","appleMusic","catch","error","showSkeletonOnLoad","Promise","resolve","setTimeout","display","position","size","filter","overflow","width","height","left","transform","undefined"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from 'react' \nimport axios from 'axios'\nimport ServiceGrid from '../models/serviceGrid'\nimport { Box, \n  ChakraProvider, \n  Image, \n  Center,\n  Button, \n  Divider, \n  Skeleton, \n  Alert, \n  AlertIcon, \n  useDisclosure, \n  Fade} from \"@chakra-ui/react\"\nimport { LinkIcon } from '@chakra-ui/icons'\nimport { useParams } from 'react-router-dom'\nimport * as clipboard from \"clipboard-polyfill/text\";\n\nconst SongPage =(props) => {\n\n  const [imgLink, setImgLink] = useState('')\n  const [spotifyLink, setSpotifyLink] = useState('')\n  const [soundCloudLink, setSoundCloudLink] = useState('')\n  const [youtubeLink, setYoutubeLink] = useState('')\n  const [appleMusicLink, setAppleMusicLink] = useState('')\n  const [showSkeleton, setShowSkeleton] = useState(false)\n  const { id } = useParams();\n  const { isOpen, onToggle } = useDisclosure()\n\n  const SPOTIFYGRADIENT = \"linear(to-l, #1DB954,#1DB954)\"\n  const SCGRADIENT = \"linear(to-l, #ff9940,#ff7700)\"\n  const YOUTUBEGRADIENT = \"linear(to-l, #cc0000,#ff1a1a)\"\n  const APPLEMUSICGRADIENT = \"linear(to-l, #b166cc,#69a6f9)\"\n\n  const currentUrl= 'http://localhost:3000'\n  const url = 'http://localhost:5000/songs/'\n\n  function handler() {\n    clipboard.writeText(currentUrl+'/song/'+id).then(\n      () => {\n        onToggle()\n      },\n      () => {\n        console.log(\"error!\");\n      }\n    );\n  }\n\n  const getAllSongs = () => {\n    axios.get(url+id)\n    .then(function (response) {\n      console.log(\"values\")  \n      let values = response.data[0].values[0]\n      setImgLink(values.imglink)\n      setSpotifyLink(values.spotify)\n      setSoundCloudLink(values.soundCloud)\n      setYoutubeLink(values.youtube)\n      setAppleMusicLink(values.appleMusic)\n            // handle success\n    })\n    .catch(function (error) {\n        // handle error\n        console.log(error);\n    })\n  }\n\n  const showSkeletonOnLoad = () => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        setShowSkeleton(true)\n        resolve();\n      }, 1500);\n    });\n  }\n\n  useEffect(() => {\n    showSkeletonOnLoad()\n    getAllSongs()\n   }, [])\n\n\n  const display = () => {\n      return (\n        <ChakraProvider>\n          <Fade initialScale={0.9} in={isOpen}>\n            <Alert status=\"success\">\n              <AlertIcon />\n              Link copied!\n            </Alert>\n          </Fade>\n          <Image style = {{\n              display: \"flex\",\n              position: \"absolute\", size: \"cover\",\n              filter: \"blur(22px)\", \n              overflow: \"hidden\",\n              width: '100vw',\n              height: '100vh' }}\n          src = {imgLink}>\n          </Image>\n          <Box\n            style={{\n            position: 'absolute', left: '50%',\n            transform: 'translate(-50%)'\n            }}\n            m = {2} \n            p = \"10px\"  \n            rounded = \"20px\" \n            boxShadow = 'lg'\n            border = \"1px\" \n            borderColor = \"gray.200\" \n            w={[250, 300, 350, 380]}\n            bg = 'white'\n            >\n              <Skeleton isLoaded = {showSkeleton} rounded = '10px'>\n                <Image rounded = \"10px\" w = '100%' src = {imgLink}></Image>\n              </Skeleton>\n              <Divider mt = \"20px\"/>\n              {spotifyLink === undefined ? '' :\n                <ServiceGrid \n                name = \"Spotify\" \n                bgGradient = {SPOTIFYGRADIENT}\n                serviceLink = {spotifyLink}>\n                </ServiceGrid>\n              }\n              {soundCloudLink === undefined ? '' : \n                <ServiceGrid \n                name = \"SoundCloud\" \n                bgGradient = {SCGRADIENT}\n                serviceLink = {soundCloudLink}>\n                </ServiceGrid>\n              }\n              {youtubeLink === undefined ? '' : \n                <ServiceGrid \n                name = \"Youtube\" \n                bgGradient = \n                {YOUTUBEGRADIENT}\n                serviceLink = {youtubeLink}>\n                </ServiceGrid>\n              }\n              {appleMusicLink === undefined ? '' :\n                <ServiceGrid \n                name = \"Apple Music\" \n                bgGradient = {APPLEMUSICGRADIENT}\n                serviceLink = {appleMusicLink}>\n                </ServiceGrid>}\n              <Center>\n              <Skeleton isLoaded = {showSkeleton} rounded = '10px'>\n                <Button onClick = {handler} mt = {8}>Share! &nbsp;\n                  <LinkIcon></LinkIcon>\n                </Button>\n                </Skeleton>\n              </Center>\n          </Box>\n          </ChakraProvider> \n      );\n  }\n\n  return(\n    <>\n    {display(props)}\n    </>\n  )\n}\n\nexport default SongPage;"]},"metadata":{},"sourceType":"module"}