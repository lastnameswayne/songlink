{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/swayne/Documents/reactprojects/spotifyAPI/my-app/frontend/src/models/serviceGrid.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { Grid, GridItem, Box, Text, Button, Skeleton } from \"@chakra-ui/react\";\n\nconst ServiceGrid = props => {\n  _s();\n\n  const [showGridSkeleton, setShowGridSkeleton] = useState(false);\n\n  const showGridSkeletonOnLoad = () => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        setShowGridSkeleton(true);\n        resolve();\n      }, 2000);\n    });\n  };\n\n  useEffect(showGridSkeletonOnLoad, []);\n  return /*#__PURE__*/_jsxDEV(Skeleton, {\n    isLoaded: showGridSkeleton,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      w: \"100%\",\n      mt: 5,\n      overflow: \"hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"style\", {\n        children: \"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@700&display=swap');\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        h: [10, 12, 14, 14],\n        templateColumns: \"repeat(12, 1fr)\",\n        gap: [2, 2, 3, 3],\n        children: [/*#__PURE__*/_jsxDEV(GridItem, {\n          pl: \"5px\",\n          pt: \"3px\",\n          rounded: \"10px\",\n          colSpan: [9, 9, 9, 9],\n          boxShadow: \"sm\",\n          _hover: {\n            bg: \"#ebedf0\"\n          },\n          bg: \"gray.200\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontFamily: \"Inter\",\n            fontWeight: \"extrabold\",\n            bgGradient: props.bgGradient,\n            bgClip: \"text\",\n            fontSize: [23, 28, 32, 33],\n            children: props.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n          rounded: \"10px\",\n          colSpan: [3, 3, 3, 3],\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => {\n              e.preventDefault();\n              window.location.href = props.serviceLink;\n            },\n            _hover: {\n              bg: \"#ebedf0\"\n            },\n            fontSize: [15, 20, 21, 21],\n            bg: \"gray.200\",\n            h: \"100%\",\n            w: \"100%\",\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ServiceGrid, \"BmC07Dig2ZTLo3Bybtskb7jHYW8=\");\n\n_c = ServiceGrid;\nexport default ServiceGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServiceGrid\");","map":{"version":3,"sources":["/home/swayne/Documents/reactprojects/spotifyAPI/my-app/frontend/src/models/serviceGrid.js"],"names":["React","useState","useEffect","Grid","GridItem","Box","Text","Button","Skeleton","ServiceGrid","props","showGridSkeleton","setShowGridSkeleton","showGridSkeletonOnLoad","Promise","resolve","setTimeout","bg","bgGradient","name","e","preventDefault","window","location","href","serviceLink"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from 'react' \nimport {Grid, GridItem, Box, Text, Button, Skeleton} from \"@chakra-ui/react\"\n\nconst ServiceGrid = (props) => {\n  const [showGridSkeleton, setShowGridSkeleton] = useState(false)\n\n  const showGridSkeletonOnLoad = () => {\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        setShowGridSkeleton(true)\n        resolve();\n      }, 2000);\n    });\n  }\n\n  useEffect(showGridSkeletonOnLoad, [])\n  \n  return (\n    <Skeleton isLoaded = {showGridSkeleton}>\n    <Box w = '100%' mt={5} overflow = \"hidden\">\n    <style>\n    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@700&display=swap');\n    </style>\n      <Grid\n        h={[10,12,14,14]}\n        templateColumns=\"repeat(12, 1fr)\"\n        gap={[2,2,3,3]}\n        >\n            <GridItem \n                pl = \"5px\" \n                pt=\"3px\"\n                rounded = \"10px\" \n                colSpan={[ 9, 9, 9, 9]}\n                boxShadow = \"sm\"\n                _hover={{ bg: \"#ebedf0\" }} \n                bg = 'gray.200'>\n                    <Text \n                    fontFamily = \"Inter\" \n                    fontWeight = \"extrabold\" \n                    bgGradient={props.bgGradient}\n                    bgClip = \"text\" fontSize = {[23, 28, 32, 33]}>\n                        {props.name}</Text>\n            </GridItem>\n            <GridItem rounded = \"10px\" colSpan={[ 3, 3, 3, 3]}>\n                <Button\n                  onClick={(e) => {\n                  e.preventDefault();\n                  window.location.href = props.serviceLink\n                  }}\n                    _hover={{ bg: \"#ebedf0\"}}\n                    fontSize = {[15,20,21,21]} \n                    bg = \"gray.200\" h = \"100%\" w= \"100%\">Play</Button>\n            </GridItem>\n      </Grid> \n    </Box>\n    </Skeleton>\n  );\n}\n\nexport default ServiceGrid;\n"]},"metadata":{},"sourceType":"module"}