{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { forwardRef } from \"@chakra-ui/system\";\nimport * as React from \"react\";\nimport { Modal, ModalContent } from \"./modal\";\nexport function AlertDialog(props) {\n  var {\n    leastDestructiveRef\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"leastDestructiveRef\"]);\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({}, rest, {\n    initialFocusRef: leastDestructiveRef\n  }));\n}\nexport var AlertDialogContent = /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/React.createElement(ModalContent, _extends({\n  ref: ref,\n  role: \"alertdialog\"\n}, props)));\nexport { ModalBody as AlertDialogBody, ModalCloseButton as AlertDialogCloseButton, ModalFooter as AlertDialogFooter, ModalHeader as AlertDialogHeader, ModalOverlay as AlertDialogOverlay } from \"./modal\";","map":{"version":3,"sources":["../../src/alert-dialog.tsx"],"names":["leastDestructiveRef","rest","AlertDialogContent","forwardRef","ModalBody","ModalCloseButton","ModalFooter","ModalHeader","ModalOverlay"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,UAAA,QAAA,mBAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,KAAA,EAAA,YAAA,QAAA,SAAA;AAMA,OAAO,SAAA,WAAA,CAAA,KAAA,EAA8C;AACnD,MAAM;AAAEA,IAAAA;AAAF,MAAN,KAAA;AAAA,MAAgCC,IAAhC,GAAA,6BAAA,CAAA,KAAA,EAAA,CAAA,qBAAA,CAAA,CAAA;;AACA,SAAA,aAAO,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAAiB,IAAA,eAAe,EAAED;AAAlC,GAAA,CAAA,CAAP;AACD;AAED,OAAO,IAAME,kBAAkB,GAAA,aAAGC,UAAU,CAC1C,CAAA,KAAA,EAAA,GAAA,KAAA,aAAgB,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA,QAAA,CAAA;AAAc,EAAA,GAAG,EAAjB,GAAA;AAAwB,EAAA,IAAI,EAAC;AAA7B,CAAA,EADX,KACW,CAAA,CAD0B,CAArC;AAIP,SACEC,SAAS,IADX,eAAA,EAEEC,gBAAgB,IAFlB,sBAAA,EAGEC,WAAW,IAHb,iBAAA,EAIEC,WAAW,IAJb,iBAAA,EAKEC,YAAY,IALd,kBAAA,QAAA,SAAA","sourcesContent":["import { forwardRef } from \"@chakra-ui/system\"\nimport * as React from \"react\"\nimport { Modal, ModalContent, ModalContentProps, ModalProps } from \"./modal\"\n\nexport interface AlertDialogProps extends Omit<ModalProps, \"initialFocusRef\"> {\n  leastDestructiveRef: ModalProps[\"initialFocusRef\"]\n}\n\nexport function AlertDialog(props: AlertDialogProps) {\n  const { leastDestructiveRef, ...rest } = props\n  return <Modal {...rest} initialFocusRef={leastDestructiveRef} />\n}\n\nexport const AlertDialogContent = forwardRef<ModalContentProps, \"section\">(\n  (props, ref) => <ModalContent ref={ref} role=\"alertdialog\" {...props} />,\n)\n\nexport {\n  ModalBody as AlertDialogBody,\n  ModalCloseButton as AlertDialogCloseButton,\n  ModalFooter as AlertDialogFooter,\n  ModalHeader as AlertDialogHeader,\n  ModalOverlay as AlertDialogOverlay,\n} from \"./modal\"\n"]},"metadata":{},"sourceType":"module"}