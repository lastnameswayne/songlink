{"ast":null,"code":"import { createParser, system } from \"../core\";\nimport { polyfill, t } from \"../utils\";\nvar config = {\n  border: t.borders(\"border\"),\n  borderWidth: t.borderWidths(\"borderWidth\"),\n  borderStyle: t.borderStyles(\"borderStyle\"),\n  borderColor: t.colors(\"borderColor\"),\n  borderRadius: t.radii(\"borderRadius\"),\n  borderTop: t.borders(\"borderTop\"),\n  borderBlockStart: t.borders(\"borderBlockStart\"),\n  borderTopLeftRadius: t.radii(\"borderTopLeftRadius\"),\n  borderStartStartRadius: {\n    property: \"&\",\n    scale: \"radii\",\n    transform: polyfill({\n      ltr: \"borderTopLeftRadius\",\n      rtl: \"borderTopRightRadius\"\n    })\n  },\n  borderEndStartRadius: {\n    property: \"&\",\n    scale: \"radii\",\n    transform: polyfill({\n      ltr: \"borderBottomLeftRadius\",\n      rtl: \"borderBottomRightRadius\"\n    })\n  },\n  borderTopRightRadius: t.radii(\"borderTopRightRadius\"),\n  borderStartEndRadius: {\n    property: \"&\",\n    scale: \"radii\",\n    transform: polyfill({\n      ltr: \"borderTopRightRadius\",\n      rtl: \"borderTopLeftRadius\"\n    })\n  },\n  borderEndEndRadius: {\n    property: \"&\",\n    scale: \"radii\",\n    transform: polyfill({\n      ltr: \"borderBottomRightRadius\",\n      rtl: \"borderBottomLeftRadius\"\n    })\n  },\n  borderRight: t.borders(\"borderRight\"),\n  borderInlineEnd: t.borders(\"borderInlineEnd\"),\n  borderBottom: t.borders(\"borderBottom\"),\n  borderBlockEnd: t.borders(\"borderBlockEnd\"),\n  borderBottomLeftRadius: t.radii(\"borderBottomLeftRadius\"),\n  borderBottomRightRadius: t.radii(\"borderBottomRightRadius\"),\n  borderLeft: t.borders(\"borderLeft\"),\n  borderInlineStart: {\n    property: \"borderInlineStart\",\n    scale: \"borders\"\n  },\n  borderInlineStartRadius: {\n    scale: \"radii\",\n    property: \"&\",\n    transform: polyfill({\n      ltr: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n      rtl: [\"borderTopRightRadius\", \"borderBottomRightRadius\"]\n    })\n  },\n  borderInlineEndRadius: {\n    scale: \"radii\",\n    property: \"&\",\n    transform: polyfill({\n      ltr: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n      rtl: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"]\n    })\n  },\n  borderX: t.borders([\"borderLeft\", \"borderRight\"]),\n  borderInline: t.borders(\"borderInline\"),\n  borderY: t.borders([\"borderTop\", \"borderBottom\"]),\n  borderBlock: t.borders(\"borderBlock\"),\n  borderTopWidth: t.borderWidths(\"borderTopWidth\"),\n  borderBlockStartWidth: t.borderWidths(\"borderBlockStartWidth\"),\n  borderTopColor: t.colors(\"borderTopColor\"),\n  borderBlockStartColor: t.colors(\"borderBlockStartColor\"),\n  borderTopStyle: t.borderStyles(\"borderTopStyle\"),\n  borderBlockStartStyle: t.borderStyles(\"borderBlockStartStyle\"),\n  borderBottomWidth: t.borderWidths(\"borderBottomWidth\"),\n  borderBlockEndWidth: t.borderWidths(\"borderBlockEndWidth\"),\n  borderBottomColor: t.colors(\"borderBottomColor\"),\n  borderBlockEndColor: t.colors(\"borderBlockEndColor\"),\n  borderBottomStyle: t.borderStyles(\"borderBottomStyle\"),\n  borderBlockEndStyle: t.borderStyles(\"borderBlockEndStyle\"),\n  borderLeftWidth: t.borderWidths(\"borderLeftWidth\"),\n  borderInlineStartWidth: t.borderWidths(\"borderInlineStartWidth\"),\n  borderLeftColor: t.colors(\"borderLeftColor\"),\n  borderInlineStartColor: t.colors(\"borderInlineStartColor\"),\n  borderLeftStyle: t.borderStyles(\"borderLeftStyle\"),\n  borderInlineStartStyle: t.borderStyles(\"borderInlineStartStyle\"),\n  borderRightWidth: t.borderWidths(\"borderRightWidth\"),\n  borderInlineEndWidth: t.borderWidths(\"borderInlineEndWidth\"),\n  borderRightColor: t.colors(\"borderRightColor\"),\n  borderInlineEndColor: t.colors(\"borderInlineEndColor\"),\n  borderRightStyle: t.borderStyles(\"borderRightStyle\"),\n  borderInlineEndStyle: t.borderStyles(\"borderInlineEndStyle\"),\n  borderTopRadius: t.radii([\"borderTopLeftRadius\", \"borderTopRightRadius\"]),\n  borderBottomRadius: t.radii([\"borderBottomLeftRadius\", \"borderBottomRightRadius\"]),\n  borderLeftRadius: t.radii([\"borderTopLeftRadius\", \"borderBottomLeftRadius\"]),\n  borderRightRadius: t.radii([\"borderTopRightRadius\", \"borderBottomRightRadius\"])\n};\nObject.assign(config, {\n  rounded: config.borderRadius,\n  roundedTop: config.borderTopRadius,\n  roundedTopLeft: config.borderTopLeftRadius,\n  roundedTopRight: config.borderTopRightRadius,\n  roundedTopStart: config.borderStartStartRadius,\n  roundedTopEnd: config.borderStartEndRadius,\n  roundedBottom: config.borderBottomRadius,\n  roundedBottomLeft: config.borderBottomLeftRadius,\n  roundedBottomRight: config.borderBottomRightRadius,\n  roundedBottomStart: config.borderEndStartRadius,\n  roundedBottomEnd: config.borderEndEndRadius,\n  roundedLeft: config.borderLeftRadius,\n  roundedRight: config.borderRightRadius,\n  roundedStart: config.borderInlineStartRadius,\n  roundedEnd: config.borderInlineEndRadius,\n  borderStart: config.borderInlineStart,\n  borderEnd: config.borderInlineEnd,\n  borderTopStartRadius: config.borderStartStartRadius,\n  borderTopEndRadius: config.borderStartEndRadius,\n  borderBottomStartRadius: config.borderEndStartRadius,\n  borderBottomEndRadius: config.borderEndEndRadius,\n  borderStartRadius: config.borderInlineStartRadius,\n  borderEndRadius: config.borderInlineEndRadius,\n  borderStartWidth: config.borderInlineStartWidth,\n  borderEndWidth: config.borderInlineEndWidth,\n  borderStartColor: config.borderInlineStartColor,\n  borderEndColor: config.borderInlineEndColor,\n  borderStartStyle: config.borderInlineStartStyle,\n  borderEndStyle: config.borderInlineEndStyle\n});\n/**\n * The prop types for border properties listed above\n */\n\nexport var border = system(config);\nexport var borderParser = createParser(config);","map":{"version":3,"sources":["../../../src/config/border.ts"],"names":["config","border","t","borderWidth","borderStyle","borderColor","borderRadius","borderTop","borderBlockStart","borderTopLeftRadius","borderStartStartRadius","property","scale","transform","polyfill","ltr","rtl","borderEndStartRadius","borderTopRightRadius","borderStartEndRadius","borderEndEndRadius","borderRight","borderInlineEnd","borderBottom","borderBlockEnd","borderBottomLeftRadius","borderBottomRightRadius","borderLeft","borderInlineStart","borderInlineStartRadius","borderInlineEndRadius","borderX","borderInline","borderY","borderBlock","borderTopWidth","borderBlockStartWidth","borderTopColor","borderBlockStartColor","borderTopStyle","borderBlockStartStyle","borderBottomWidth","borderBlockEndWidth","borderBottomColor","borderBlockEndColor","borderBottomStyle","borderBlockEndStyle","borderLeftWidth","borderInlineStartWidth","borderLeftColor","borderInlineStartColor","borderLeftStyle","borderInlineStartStyle","borderRightWidth","borderInlineEndWidth","borderRightColor","borderInlineEndColor","borderRightStyle","borderInlineEndStyle","borderTopRadius","borderBottomRadius","borderLeftRadius","borderRightRadius","Object","rounded","roundedTop","roundedTopLeft","roundedTopRight","roundedTopStart","roundedTopEnd","roundedBottom","roundedBottomLeft","roundedBottomRight","roundedBottomStart","roundedBottomEnd","roundedLeft","roundedRight","roundedStart","roundedEnd","borderStart","borderEnd","borderTopStartRadius","borderTopEndRadius","borderBottomStartRadius","borderBottomEndRadius","borderStartRadius","borderEndRadius","borderStartWidth","borderEndWidth","borderStartColor","borderEndColor","borderStartStyle","borderEndStyle","system","borderParser","createParser"],"mappings":"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","sourcesContent":["import * as CSS from \"csstype\"\nimport { Config, createParser, system } from \"../core\"\nimport { Length, polyfill, ResponsiveValue, t } from \"../utils\"\n\nconst config: Config = {\n  border: t.borders(\"border\"),\n  borderWidth: t.borderWidths(\"borderWidth\"),\n  borderStyle: t.borderStyles(\"borderStyle\"),\n  borderColor: t.colors(\"borderColor\"),\n  borderRadius: t.radii(\"borderRadius\"),\n  borderTop: t.borders(\"borderTop\"),\n  borderBlockStart: t.borders(\"borderBlockStart\"),\n  borderTopLeftRadius: t.radii(\"borderTopLeftRadius\"),\n  borderStartStartRadius: {\n    property: \"&\",\n    scale: \"radii\",\n    transform: polyfill({\n      ltr: \"borderTopLeftRadius\",\n      rtl: \"borderTopRightRadius\",\n    }),\n  },\n  borderEndStartRadius: {\n    property: \"&\",\n    scale: \"radii\",\n    transform: polyfill({\n      ltr: \"borderBottomLeftRadius\",\n      rtl: \"borderBottomRightRadius\",\n    }),\n  },\n  borderTopRightRadius: t.radii(\"borderTopRightRadius\"),\n  borderStartEndRadius: {\n    property: \"&\",\n    scale: \"radii\",\n    transform: polyfill({\n      ltr: \"borderTopRightRadius\",\n      rtl: \"borderTopLeftRadius\",\n    }),\n  },\n  borderEndEndRadius: {\n    property: \"&\",\n    scale: \"radii\",\n    transform: polyfill({\n      ltr: \"borderBottomRightRadius\",\n      rtl: \"borderBottomLeftRadius\",\n    }),\n  },\n  borderRight: t.borders(\"borderRight\"),\n  borderInlineEnd: t.borders(\"borderInlineEnd\"),\n  borderBottom: t.borders(\"borderBottom\"),\n  borderBlockEnd: t.borders(\"borderBlockEnd\"),\n  borderBottomLeftRadius: t.radii(\"borderBottomLeftRadius\"),\n  borderBottomRightRadius: t.radii(\"borderBottomRightRadius\"),\n  borderLeft: t.borders(\"borderLeft\"),\n  borderInlineStart: {\n    property: \"borderInlineStart\",\n    scale: \"borders\",\n  },\n  borderInlineStartRadius: {\n    scale: \"radii\",\n    property: \"&\",\n    transform: polyfill({\n      ltr: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n      rtl: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n    }),\n  },\n  borderInlineEndRadius: {\n    scale: \"radii\",\n    property: \"&\",\n    transform: polyfill({\n      ltr: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n      rtl: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n    }),\n  },\n  borderX: t.borders([\"borderLeft\", \"borderRight\"]),\n  borderInline: t.borders(\"borderInline\"),\n  borderY: t.borders([\"borderTop\", \"borderBottom\"]),\n  borderBlock: t.borders(\"borderBlock\"),\n  borderTopWidth: t.borderWidths(\"borderTopWidth\"),\n  borderBlockStartWidth: t.borderWidths(\"borderBlockStartWidth\"),\n  borderTopColor: t.colors(\"borderTopColor\"),\n  borderBlockStartColor: t.colors(\"borderBlockStartColor\"),\n  borderTopStyle: t.borderStyles(\"borderTopStyle\"),\n  borderBlockStartStyle: t.borderStyles(\"borderBlockStartStyle\"),\n  borderBottomWidth: t.borderWidths(\"borderBottomWidth\"),\n  borderBlockEndWidth: t.borderWidths(\"borderBlockEndWidth\"),\n  borderBottomColor: t.colors(\"borderBottomColor\"),\n  borderBlockEndColor: t.colors(\"borderBlockEndColor\"),\n  borderBottomStyle: t.borderStyles(\"borderBottomStyle\"),\n  borderBlockEndStyle: t.borderStyles(\"borderBlockEndStyle\"),\n  borderLeftWidth: t.borderWidths(\"borderLeftWidth\"),\n  borderInlineStartWidth: t.borderWidths(\"borderInlineStartWidth\"),\n  borderLeftColor: t.colors(\"borderLeftColor\"),\n  borderInlineStartColor: t.colors(\"borderInlineStartColor\"),\n  borderLeftStyle: t.borderStyles(\"borderLeftStyle\"),\n  borderInlineStartStyle: t.borderStyles(\"borderInlineStartStyle\"),\n  borderRightWidth: t.borderWidths(\"borderRightWidth\"),\n  borderInlineEndWidth: t.borderWidths(\"borderInlineEndWidth\"),\n  borderRightColor: t.colors(\"borderRightColor\"),\n  borderInlineEndColor: t.colors(\"borderInlineEndColor\"),\n  borderRightStyle: t.borderStyles(\"borderRightStyle\"),\n  borderInlineEndStyle: t.borderStyles(\"borderInlineEndStyle\"),\n  borderTopRadius: t.radii([\"borderTopLeftRadius\", \"borderTopRightRadius\"]),\n  borderBottomRadius: t.radii([\n    \"borderBottomLeftRadius\",\n    \"borderBottomRightRadius\",\n  ]),\n  borderLeftRadius: t.radii([\"borderTopLeftRadius\", \"borderBottomLeftRadius\"]),\n  borderRightRadius: t.radii([\n    \"borderTopRightRadius\",\n    \"borderBottomRightRadius\",\n  ]),\n}\n\nObject.assign(config, {\n  rounded: config.borderRadius,\n  roundedTop: config.borderTopRadius,\n  roundedTopLeft: config.borderTopLeftRadius,\n  roundedTopRight: config.borderTopRightRadius,\n  roundedTopStart: config.borderStartStartRadius,\n  roundedTopEnd: config.borderStartEndRadius,\n  roundedBottom: config.borderBottomRadius,\n  roundedBottomLeft: config.borderBottomLeftRadius,\n  roundedBottomRight: config.borderBottomRightRadius,\n  roundedBottomStart: config.borderEndStartRadius,\n  roundedBottomEnd: config.borderEndEndRadius,\n  roundedLeft: config.borderLeftRadius,\n  roundedRight: config.borderRightRadius,\n  roundedStart: config.borderInlineStartRadius,\n  roundedEnd: config.borderInlineEndRadius,\n  borderStart: config.borderInlineStart,\n  borderEnd: config.borderInlineEnd,\n  borderTopStartRadius: config.borderStartStartRadius,\n  borderTopEndRadius: config.borderStartEndRadius,\n  borderBottomStartRadius: config.borderEndStartRadius,\n  borderBottomEndRadius: config.borderEndEndRadius,\n  borderStartRadius: config.borderInlineStartRadius,\n  borderEndRadius: config.borderInlineEndRadius,\n  borderStartWidth: config.borderInlineStartWidth,\n  borderEndWidth: config.borderInlineEndWidth,\n  borderStartColor: config.borderInlineStartColor,\n  borderEndColor: config.borderInlineEndColor,\n  borderStartStyle: config.borderInlineStartStyle,\n  borderEndStyle: config.borderInlineEndStyle,\n})\n\n/**\n * The prop types for border properties listed above\n */\nexport interface BorderProps {\n  /**\n   * The CSS `border` property\n   */\n  border?: ResponsiveValue<CSS.Property.Border<Length>>\n  /**\n   * The CSS `border-width` property\n   */\n  borderWidth?: ResponsiveValue<CSS.Property.BorderWidth<Length>>\n  /**\n   * The CSS `border-style` property\n   */\n  borderStyle?: ResponsiveValue<CSS.Property.BorderStyle>\n  /**\n   * The CSS `border-color` property\n   */\n  borderColor?: ResponsiveValue<CSS.Property.BorderTopColor>\n  /**\n   * The CSS `border-radius` property\n   */\n  borderRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-radius` property\n   */\n  rounded?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-top` property\n   */\n  borderTop?: ResponsiveValue<CSS.Property.BorderTop<Length>>\n  borderBlockStart?: ResponsiveValue<CSS.Property.BorderBlockStart<Length>>\n  /**\n   * The CSS `border-top-width` property\n   */\n  borderTopWidth?: ResponsiveValue<CSS.Property.BorderWidth<Length>>\n  borderBlockStartWidth?: ResponsiveValue<\n    CSS.Property.BorderBlockStartWidth<Length>\n  >\n  /**\n   * The CSS `border-bottom-width` property\n   */\n  borderBottomWidth?: ResponsiveValue<CSS.Property.BorderWidth<Length>>\n  borderBlockEndWidth?: ResponsiveValue<\n    CSS.Property.BorderBlockEndWidth<Length>\n  >\n  /**\n   * The CSS `border-left-width` property\n   */\n  borderLeftWidth?: ResponsiveValue<CSS.Property.BorderWidth<Length>>\n  borderStartWidth?: ResponsiveValue<CSS.Property.BorderWidth<Length>>\n  borderInlineStartWidth?: ResponsiveValue<\n    CSS.Property.BorderInlineStartWidth<Length>\n  >\n  /**\n   * The CSS `border-right-width` property\n   */\n  borderRightWidth?: ResponsiveValue<CSS.Property.BorderWidth<Length>>\n  borderEndWidth?: ResponsiveValue<CSS.Property.BorderWidth<Length>>\n  borderInlineEndWidth?: ResponsiveValue<\n    CSS.Property.BorderInlineEndWidth<Length>\n  >\n  /**\n   * The CSS `border-top-style` property\n   */\n  borderTopStyle?: ResponsiveValue<CSS.Property.BorderTopStyle>\n  borderBlockStartStyle?: ResponsiveValue<CSS.Property.BorderBlockStartStyle>\n  /**\n   * The CSS `border-bottom-style` property\n   */\n  borderBottomStyle?: ResponsiveValue<CSS.Property.BorderBottomStyle>\n  borderBlockEndStyle?: ResponsiveValue<CSS.Property.BorderBlockEndStyle>\n  /**\n   * The CSS `border-left-style` property\n   */\n  borderLeftStyle?: ResponsiveValue<CSS.Property.BorderLeftStyle>\n  borderStartStyle?: ResponsiveValue<CSS.Property.BorderInlineStartStyle>\n  borderInlineStartStyle?: ResponsiveValue<CSS.Property.BorderInlineStartStyle>\n  /**\n   * The CSS `border-right-styles` property\n   */\n  borderRightStyle?: ResponsiveValue<CSS.Property.BorderRightStyle>\n  borderEndStyle?: ResponsiveValue<CSS.Property.BorderInlineEndStyle>\n  borderInlineEndStyle?: ResponsiveValue<CSS.Property.BorderInlineEndStyle>\n  /**\n   * The CSS `border-top-color` property\n   */\n  borderTopColor?: ResponsiveValue<CSS.Property.BorderTopColor>\n  borderBlockStartColor?: ResponsiveValue<CSS.Property.BorderBlockStartColor>\n  /**\n   * The CSS `border-bottom-color` property\n   */\n  borderBottomColor?: ResponsiveValue<CSS.Property.BorderBottomColor>\n  borderBlockEndColor?: ResponsiveValue<CSS.Property.BorderBlockEndColor>\n  /**\n   * The CSS `border-left-color` property\n   */\n  borderLeftColor?: ResponsiveValue<CSS.Property.BorderLeftColor>\n  borderStartColor?: ResponsiveValue<CSS.Property.BorderInlineStartColor>\n  borderInlineStartColor?: ResponsiveValue<CSS.Property.BorderInlineStartColor>\n  /**\n   * The CSS `border-right-color` property\n   */\n  borderRightColor?: ResponsiveValue<CSS.Property.BorderRightColor>\n  borderEndColor?: ResponsiveValue<CSS.Property.BorderInlineEndColor>\n  borderInlineEndColor?: ResponsiveValue<CSS.Property.BorderInlineEndColor>\n  /**\n   * The CSS `border-right` property\n   */\n  borderRight?: ResponsiveValue<CSS.Property.BorderRight<Length>>\n  borderEnd?: ResponsiveValue<CSS.Property.BorderInlineStart<Length>>\n  borderInlineEnd?: ResponsiveValue<CSS.Property.BorderInlineEnd<Length>>\n  /**\n   * The CSS `border-bottom` property\n   */\n  borderBottom?: ResponsiveValue<CSS.Property.BorderBottom<Length>>\n  borderBlockEnd?: ResponsiveValue<CSS.Property.BorderBlockEnd<Length>>\n  /**\n   * The CSS `border-left` property\n   */\n  borderLeft?: ResponsiveValue<CSS.Property.BorderLeft<Length>>\n  borderStart?: ResponsiveValue<CSS.Property.BorderInlineStart<Length>>\n  borderInlineStart?: ResponsiveValue<CSS.Property.BorderInlineStart<Length>>\n  /**\n   * The CSS `border-top-radius` property\n   */\n  borderTopRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-top-radius` property\n   */\n  roundedTop?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-right-radius` property\n   */\n  borderRightRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-right-radius` property\n   */\n  roundedRight?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * When direction is `ltr`, `roundedEnd` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `roundedEnd` is equivalent to `borderLeftRadius`.\n   */\n  roundedEnd?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * When direction is `ltr`, `borderInlineEndRadius` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `borderInlineEndRadius` is equivalent to `borderLeftRadius`.\n   */\n  borderInlineEndRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * When direction is `ltr`, `borderEndRadius` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `borderEndRadius` is equivalent to `borderLeftRadius`.\n   */\n  borderEndRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-bottom-radius` property\n   */\n  borderBottomRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-bottom-radius` property\n   */\n  roundedBottom?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-left-radius` property\n   */\n  borderLeftRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-left-radius` property\n   */\n  roundedLeft?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * When direction is `ltr`, `roundedEnd` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `roundedEnd` is equivalent to `borderLeftRadius`.\n   */\n  roundedStart?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * When direction is `ltr`, `borderInlineStartRadius` is equivalent to `borderLeftRadius`.\n   * When direction is `rtl`, `borderInlineStartRadius` is equivalent to `borderRightRadius`.\n   */\n  borderInlineStartRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * When direction is `ltr`, `borderStartRadius` is equivalent to `borderLeftRadius`.\n   * When direction is `rtl`, `borderStartRadius` is equivalent to `borderRightRadius`.\n   */\n  borderStartRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-top-left-radius` property\n   */\n  borderTopLeftRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  borderTopStartRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  borderStartStartRadius?: ResponsiveValue<\n    CSS.Property.BorderStartStartRadius<Length>\n  >\n  /**\n   * The CSS `border-top-left-radius` property\n   */\n  roundedTopLeft?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  roundedTopStart?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-top-right-radius` property\n   */\n  borderTopRightRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  borderTopEndRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  borderStartEndRadius?: ResponsiveValue<\n    CSS.Property.BorderStartEndRadius<Length>\n  >\n  /**\n   * The CSS `border-top-right-radius` property\n   */\n  roundedTopRight?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  roundedTopEnd?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n\n  /**\n   * The CSS `border-bottom-left-radius` property\n   */\n  borderBottomLeftRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  borderBottomStartRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  borderEndStartRadius?: ResponsiveValue<\n    CSS.Property.BorderEndStartRadius<Length>\n  >\n  /**\n   * The CSS `border-bottom-left-radius` property\n   */\n  roundedBottomLeft?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  roundedBottomStart?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-bottom-right-radius` property\n   */\n  borderBottomRightRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  borderBottomEndRadius?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  borderEndEndRadius?: ResponsiveValue<CSS.Property.BorderEndEndRadius<Length>>\n  /**\n   * The CSS `border-bottom-right-radius` property\n   */\n  roundedBottomRight?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  roundedBottomEnd?: ResponsiveValue<CSS.Property.BorderRadius<Length>>\n  /**\n   * The CSS `border-right` and `border-left` property\n   */\n  borderX?: ResponsiveValue<CSS.Property.Border<Length>>\n  borderInline?: ResponsiveValue<CSS.Property.BorderInline<Length>>\n  /**\n   * The CSS `border-top` and `border-bottom` property\n   */\n  borderY?: ResponsiveValue<CSS.Property.Border<Length>>\n  borderBlock?: ResponsiveValue<CSS.Property.BorderBlock<Length>>\n}\n\nexport const border = system(config)\nexport const borderParser = createParser(config)\n"]},"metadata":{},"sourceType":"module"}