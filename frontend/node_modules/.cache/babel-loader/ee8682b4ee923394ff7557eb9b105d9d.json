{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/swayne/Documents/reactprojects/spotifyAPI/my-app/frontend/src/models/songLinkForm.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { FormHelperText, FormLabel, FormControl, Input, Button, Checkbox, CheckboxGroup, HStack, Box, Center, Heading } from \"@chakra-ui/react\";\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\n\nconst SongLinkForm = () => {\n  _s();\n\n  let history = useHistory();\n  let [id, setId] = useState(\"\");\n  const {\n    handleSubmit,\n    errors,\n    register,\n    formState\n  } = useForm();\n  const [showSpotifyForm, setShowSpotifyForm] = useState(false);\n  const [showSoundcloudForm, setShowSoundcloudForm] = useState(false);\n  const [showYoutubeForm, setShowYoutubeForm] = useState(false);\n  const [showAppleMusicForm, setShowAppleMusicForm] = useState(false);\n\n  function onSubmit(values, actions) {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:5000/songs/add\",\n      data: {\n        values\n      }\n    }).then(() => history.push({\n      pathname: `/song/${id}`,\n      state: {\n        id: id\n      }\n    })).catch(error => {\n      alert(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: \"10px\",\n    padding: \"10px\",\n    borderRadius: \"10px\",\n    border: \"1px\",\n    borderColor: \"gray.200\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      children: \"SongLink\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        my: \"15px\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Insert an album with the link(s) to your song and SongLink will create a landing page for your song!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isInvalid: errors.name,\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: \"20px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            htmlFor: \"link\",\n            children: \"Image Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"imglink\",\n            placeholder: \"Image Link\",\n            ref: register({\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isInvalid: errors.name,\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            mt: 3,\n            htmlFor: \"link\",\n            children: \"Custom URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: id,\n            onInput: e => setId(e.target.value),\n            name: \"id\",\n            placeholder: \"Custom URL\",\n            ref: register({\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            ml: 2,\n            children: \"Specify a custom unique URL. If you input \\\"123\\\" the link to your track will be heroku.com/song/123!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        as: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          as: \"legend\",\n          children: \"Streaming services your track is available on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(CheckboxGroup, {\n          colorScheme: \"green\",\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              onChange: () => setShowSpotifyForm(!showSpotifyForm),\n              value: \"spotify\",\n              children: \"Spotify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n              onChange: () => setShowSoundcloudForm(!showSoundcloudForm),\n              value: \"soundcloud\",\n              children: \"Soundcloud\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n              onChange: () => setShowYoutubeForm(!showYoutubeForm),\n              value: \"youtube\",\n              children: \"Youtube\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n              onChange: () => setShowAppleMusicForm(!showAppleMusicForm),\n              value: \"applemusic\",\n              children: \"Apple\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), showSpotifyForm ? /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: errors.name,\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"link\",\n          children: \"Spotify link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"spotify\",\n          placeholder: \"Spotify Link\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 26\n      }, this) : '', showSoundcloudForm ? /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: errors.link,\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"link\",\n          children: \"SoundCloud Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"soundCloud\",\n          placeholder: \"SoundCloud Link\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }, this) : '', showYoutubeForm ? /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: errors.lnk,\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"link\",\n          children: \"Youtube\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"youtube\",\n          placeholder: \"Youtube Link\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 27\n      }, this) : '', showAppleMusicForm ? /*#__PURE__*/_jsxDEV(FormControl, {\n        colorScheme: \"red\",\n        isInvalid: errors.link,\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          colorScheme: \"red\",\n          htmlFor: \"name\",\n          children: \"Apple Music\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"appleMusic\",\n          placeholder: \"Apple Music Link\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }, this) : '', /*#__PURE__*/_jsxDEV(Center, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {},\n          _hover: {\n            bg: \"#6ed0ce\",\n            boxShadow: \"md\"\n          },\n          mt: 4,\n          bg: \"#3bb5b2\",\n          color: \"#ffffff\",\n          isLoading: formState.isSubmitting,\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SongLinkForm, \"ZuEle/KX1RvGRneCNDHldzbG1Mk=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = SongLinkForm;\nexport default SongLinkForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongLinkForm\");","map":{"version":3,"sources":["/home/swayne/Documents/reactprojects/spotifyAPI/my-app/frontend/src/models/songLinkForm.js"],"names":["React","useState","useForm","FormHelperText","FormLabel","FormControl","Input","Button","Checkbox","CheckboxGroup","HStack","Box","Center","Heading","axios","useHistory","SongLinkForm","history","id","setId","handleSubmit","errors","register","formState","showSpotifyForm","setShowSpotifyForm","showSoundcloudForm","setShowSoundcloudForm","showYoutubeForm","setShowYoutubeForm","showAppleMusicForm","setShowAppleMusicForm","onSubmit","values","actions","method","url","data","then","push","pathname","state","catch","error","alert","name","required","e","target","value","link","lnk","bg","boxShadow","isSubmitting"],"mappings":"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","sourcesContent":["import {React, useState} from 'react';\nimport { useForm } from \"react-hook-form\";\nimport {\n  FormHelperText,\n  FormLabel,\n  FormControl,\n  Input,\n  Button,\n  Checkbox, \n  CheckboxGroup, \n  HStack, \n  Box,\n  Center, Heading\n} from \"@chakra-ui/react\";\nimport axios from 'axios'\nimport {\n  useHistory,\n} from \"react-router-dom\"\n\nconst SongLinkForm = () => {\n  let history = useHistory();\n  let [ id, setId ] = useState(\"\")\n  const { handleSubmit, errors, register, formState } = useForm();\n\n  const [ showSpotifyForm, setShowSpotifyForm ] = useState(false)\n  const [ showSoundcloudForm, setShowSoundcloudForm ] = useState(false)\n  const [ showYoutubeForm, setShowYoutubeForm ] = useState(false)\n  const [ showAppleMusicForm, setShowAppleMusicForm ] = useState(false)\n\n  function onSubmit(values, actions) {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:5000/songs/add\",\n      data: {values},\n    },  \n    ).then(() =>history.push({pathname: `/song/${id}`, state: {id: id}}))\n    .catch(error => {\n        alert(error)\n    },\n  )\n}\n\n\n  return (\n    <Box mt = \"10px\" padding = \"10px\" borderRadius = \"10px\" border = \"1px\" borderColor = \"gray.200\" >\n    <Heading>SongLink</Heading>\n    <form onSubmit={handleSubmit(onSubmit)}>\n    <Box my = '15px'>\n    <FormLabel>Insert an album with the link(s) to your song and SongLink will create a \n            landing page for your song!</FormLabel>\n    <FormControl isInvalid={errors.name} isRequired>\n    <Box mb = \"20px\"></Box>\n        <FormLabel htmlFor=\"link\">Image Link</FormLabel>\n        <Input\n          name=\"imglink\"\n          placeholder=\"Image Link\"\n          ref={register({ required: true })}\n        />\n      </FormControl> \n      <FormControl isInvalid={errors.name} isRequired>\n      <FormLabel  mt = {3} htmlFor=\"link\">Custom URL</FormLabel>\n      <Input value={id} onInput={e => setId(e.target.value)}\n          name=\"id\"\n          placeholder=\"Custom URL\"\n          ref={register({ required: true })}\n        />\n        <FormHelperText ml = {2}>Specify a custom unique URL. If you input \"123\" the link to your track will be heroku.com/song/123!</FormHelperText>\n        </FormControl>\n      </Box>\n    <FormControl as = \"fieldset\">\n    <FormLabel as = \"legend\">Streaming services your track is available on</FormLabel>\n    <CheckboxGroup colorScheme=\"green\">\n        <HStack>\n            <Checkbox onChange = {() => setShowSpotifyForm(!showSpotifyForm)} value=\"spotify\">Spotify</Checkbox>\n            <Checkbox onChange = {() => setShowSoundcloudForm(!showSoundcloudForm)} value=\"soundcloud\">Soundcloud</Checkbox>\n            <Checkbox onChange = {() => setShowYoutubeForm(!showYoutubeForm)} value=\"youtube\">Youtube</Checkbox>\n            <Checkbox onChange = {() => setShowAppleMusicForm(!showAppleMusicForm)} value=\"applemusic\">Apple</Checkbox>\n        </HStack>\n    </CheckboxGroup>\n    </FormControl>\n      {showSpotifyForm ? <FormControl isInvalid={errors.name} isRequired>\n        <FormLabel htmlFor=\"link\">Spotify link</FormLabel>\n        <Input\n          name=\"spotify\"\n          placeholder=\"Spotify Link\"\n          ref={register({ required: true })}\n        />\n      </FormControl> : ''}\n      {showSoundcloudForm ? <FormControl isInvalid={errors.link} isRequired>\n        <FormLabel htmlFor=\"link\">SoundCloud Link</FormLabel>\n        <Input\n          name=\"soundCloud\"\n          placeholder=\"SoundCloud Link\"\n          ref={register({ required: true })}\n        />\n      </FormControl> : ''}\n      {showYoutubeForm ?  <FormControl isInvalid={errors.lnk} isRequired>\n        <FormLabel htmlFor=\"link\">Youtube</FormLabel>\n        <Input\n          name=\"youtube\"\n          placeholder=\"Youtube Link\"\n          ref={register({ required: true })}\n        />\n      </FormControl> : ''}\n      {showAppleMusicForm ? <FormControl colorScheme = \"red\" isInvalid={errors.link} isRequired>\n        <FormLabel colorScheme = \"red\" htmlFor=\"name\">Apple Music</FormLabel>\n        <Input\n          name=\"appleMusic\"\n          placeholder=\"Apple Music Link\"\n          ref={register({ required: true })}\n        />\n      </FormControl> : ''}\n      <Center>\n        <Button\n          onClick = {() => {}\n        }\n          _hover={{ bg: \"#6ed0ce\", boxShadow: \"md\"}}\n          mt={4}\n          bg=\"#3bb5b2\" \n          color=\"#ffffff\"\n          isLoading={formState.isSubmitting} \n          type=\"submit\">Create\n        </Button>\n      </Center>\n    </form>\n    </Box>\n  );\n}\nexport default SongLinkForm"]},"metadata":{},"sourceType":"module"}