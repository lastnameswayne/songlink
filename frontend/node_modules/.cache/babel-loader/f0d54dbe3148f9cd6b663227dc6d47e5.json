{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { useSafeLayoutEffect } from \"@chakra-ui/hooks\";\nimport Icon from \"@chakra-ui/icon\";\nimport { chakra, forwardRef, useStyles, useMultiStyleConfig, omitThemingProps, StylesProvider } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { useFormControlContext } from \"./form-control\";\n/**\n * Used to provide feedback about an invalid input,\n * and suggest clear instrctions on how to fix it.\n */\n\nexport var FormErrorMessage = /*#__PURE__*/forwardRef((passedProps, ref) => {\n  var _props$id;\n\n  var styles = useMultiStyleConfig(\"FormError\", passedProps);\n  var props = omitThemingProps(passedProps);\n  var field = useFormControlContext();\n  /**\n   * Notify the field context when the error message is rendered on screen,\n   * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n   */\n\n  useSafeLayoutEffect(() => {\n    field == null ? void 0 : field.setHasFeedbackText.on();\n    return () => field == null ? void 0 : field.setHasFeedbackText.off();\n  }, []);\n  if (!(field != null && field.isInvalid)) return null;\n\n  var _className = cx(\"chakra-form__error-message\", props.className);\n\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({\n    \"aria-live\": \"polite\",\n    ref: ref\n  }, props, {\n    __css: _extends({\n      display: \"flex\",\n      alignItems: \"center\"\n    }, styles.text),\n    className: _className,\n    id: (_props$id = props.id) != null ? _props$id : field == null ? void 0 : field.feedbackId\n  })));\n});\n\nif (__DEV__) {\n  FormErrorMessage.displayName = \"FormErrorMessage\";\n}\n/**\n * Used as the visual indicator that a field is invalid or\n * a field has incorrect values.\n */\n\n\nexport var FormErrorIcon = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useStyles();\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n\n  var _className = cx(\"chakra-form__error-icon\", props.className);\n\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    \"aria-hidden\": true\n  }, props, {\n    __css: styles.icon,\n    className: _className\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n  }));\n});\n\nif (__DEV__) {\n  FormErrorIcon.displayName = \"FormErrorIcon\";\n}","map":{"version":3,"sources":["../../src/form-error.tsx"],"names":["FormErrorMessage","forwardRef","styles","useMultiStyleConfig","props","omitThemingProps","field","useFormControlContext","useSafeLayoutEffect","_className","cx","ref","display","alignItems","feedbackId","FormErrorIcon","useStyles"],"mappings":"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","sourcesContent":["import { useSafeLayoutEffect } from \"@chakra-ui/hooks\"\nimport Icon, { IconProps } from \"@chakra-ui/icon\"\nimport {\n  chakra,\n  forwardRef,\n  useStyles,\n  HTMLChakraProps,\n  useMultiStyleConfig,\n  ThemingProps,\n  omitThemingProps,\n  StylesProvider,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\nimport { useFormControlContext } from \"./form-control\"\n\nexport interface FormErrorMessageProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps {}\n\n/**\n * Used to provide feedback about an invalid input,\n * and suggest clear instrctions on how to fix it.\n */\nexport const FormErrorMessage = forwardRef<FormErrorMessageProps, \"div\">(\n  (passedProps, ref) => {\n    const styles = useMultiStyleConfig(\"FormError\", passedProps)\n    const props = omitThemingProps(passedProps)\n\n    const field = useFormControlContext()\n\n    /**\n     * Notify the field context when the error message is rendered on screen,\n     * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n     */\n    useSafeLayoutEffect(() => {\n      field?.setHasFeedbackText.on()\n      return () => field?.setHasFeedbackText.off()\n    }, [])\n\n    if (!field?.isInvalid) return null\n\n    const _className = cx(\"chakra-form__error-message\", props.className)\n\n    return (\n      <StylesProvider value={styles}>\n        <chakra.div\n          aria-live=\"polite\"\n          ref={ref}\n          {...props}\n          __css={{\n            display: \"flex\",\n            alignItems: \"center\",\n            ...styles.text,\n          }}\n          className={_className}\n          id={props.id ?? field?.feedbackId}\n        />\n      </StylesProvider>\n    )\n  },\n)\n\nif (__DEV__) {\n  FormErrorMessage.displayName = \"FormErrorMessage\"\n}\n\n/**\n * Used as the visual indicator that a field is invalid or\n * a field has incorrect values.\n */\nexport const FormErrorIcon = forwardRef<IconProps, \"svg\">((props, ref) => {\n  const styles = useStyles()\n  const field = useFormControlContext()\n\n  if (!field?.isInvalid) return null\n\n  const _className = cx(\"chakra-form__error-icon\", props.className)\n\n  return (\n    <Icon\n      ref={ref}\n      aria-hidden\n      {...props}\n      __css={styles.icon}\n      className={_className}\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n      />\n    </Icon>\n  )\n})\n\nif (__DEV__) {\n  FormErrorIcon.displayName = \"FormErrorIcon\"\n}\n"]},"metadata":{},"sourceType":"module"}