{"ast":null,"code":"import { runIfFn } from \"@chakra-ui/utils\";\nexport { runIfFn };\nexport function mode(light, dark) {\n  return props => props.colorMode === \"dark\" ? dark : light;\n}\nexport function orient(options) {\n  var {\n    orientation,\n    vertical,\n    horizontal\n  } = options;\n  if (!orientation) return {};\n  return orientation === \"vertical\" ? vertical : horizontal;\n}","map":{"version":3,"sources":["../../src/component.ts"],"names":["props","horizontal","orientation"],"mappings":"AACA,SAAA,OAAA,QAAA,kBAAA;AAkCA,SAAA,OAAA;AAIA,OAAO,SAAA,IAAA,CAAA,KAAA,EAAA,IAAA,EAAqC;AAC1C,SAAQA,KAAD,IAAkBA,KAAK,CAALA,SAAAA,KAAAA,MAAAA,GAAAA,IAAAA,GAAzB,KAAA;AACD;AAED,OAAO,SAAA,MAAA,CAAA,OAAA,EAIJ;AACD,MAAM;AAAA,IAAA,WAAA;AAAA,IAAA,QAAA;AAAyBC,IAAAA;AAAzB,MAAN,OAAA;AACA,MAAI,CAAJ,WAAA,EAAkB,OAAA,EAAA;AAClB,SAAOC,WAAW,KAAXA,UAAAA,GAAAA,QAAAA,GAAP,UAAA;AACD","sourcesContent":["import { SystemStyleObject } from \"@chakra-ui/system\"\nimport { Dict, runIfFn } from \"@chakra-ui/utils\"\n\nexport interface StyleConfig {\n  baseStyle?: SystemStyleObject\n  sizes?: { [size: string]: SystemStyleObject }\n  variants?: { [variant: string]: SystemStyleObject }\n  defaultProps?: {\n    size?: string\n    variant?: string\n    colorScheme?: string\n  }\n}\n\nexport interface MultiStyleConfig {\n  baseStyle?: { [part: string]: SystemStyleObject }\n  sizes?: { [size: string]: { [part: string]: SystemStyleObject } }\n  variants?: { [variants: string]: { [part: string]: SystemStyleObject } }\n  defaultProps?: StyleConfig[\"defaultProps\"]\n}\n\nexport interface GlobalStyleProps {\n  colorScheme: string\n  colorMode: \"light\" | \"dark\"\n  theme: Dict\n}\n\nexport type GlobalStyles = {\n  global?: SystemStyleObject | ((props: GlobalStyleProps) => SystemStyleObject)\n}\n\nexport type JSXElementStyles = {\n  [K in keyof JSX.IntrinsicElements]?: SystemStyleObject\n}\n\nexport { runIfFn }\n\nexport type Styles = GlobalStyles & JSXElementStyles\n\nexport function mode(light: any, dark: any) {\n  return (props: Dict) => (props.colorMode === \"dark\" ? dark : light)\n}\n\nexport function orient(options: {\n  orientation?: \"vertical\" | \"horizontal\"\n  vertical: any\n  horizontal: any\n}) {\n  const { orientation, vertical, horizontal } = options\n  if (!orientation) return {}\n  return orientation === \"vertical\" ? vertical : horizontal\n}\n"]},"metadata":{},"sourceType":"module"}