{"ast":null,"code":"import { getColor, mode, transparentize } from \"@chakra-ui/theme-tools\";\nvar baseStyle = {\n  px: 1,\n  textTransform: \"uppercase\",\n  fontSize: \"xs\",\n  borderRadius: \"sm\",\n  fontWeight: \"bold\"\n};\n\nfunction variantSolid(props) {\n  var {\n    colorScheme: c,\n    theme\n  } = props;\n  var dark = transparentize(c + \".500\", 0.6)(theme);\n  return {\n    bg: mode(c + \".500\", dark)(props),\n    color: mode(\"white\", \"whiteAlpha.800\")(props)\n  };\n}\n\nfunction variantSubtle(props) {\n  var {\n    colorScheme: c,\n    theme\n  } = props;\n  var darkBg = transparentize(c + \".200\", 0.16)(theme);\n  return {\n    bg: mode(c + \".100\", darkBg)(props),\n    color: mode(c + \".800\", c + \".200\")(props)\n  };\n}\n\nfunction variantOutline(props) {\n  var {\n    colorScheme: c,\n    theme\n  } = props;\n  var darkColor = transparentize(c + \".200\", 0.8)(theme);\n  var lightColor = getColor(theme, c + \".500\");\n  var color = mode(lightColor, darkColor)(props);\n  return {\n    color,\n    boxShadow: \"inset 0 0 0px 1px \" + color\n  };\n}\n\nvar variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline\n};\nvar defaultProps = {\n  variant: \"subtle\",\n  colorScheme: \"gray\"\n};\nexport default {\n  baseStyle,\n  variants,\n  defaultProps\n};","map":{"version":3,"sources":["../../../src/components/badge.ts"],"names":["baseStyle","px","textTransform","fontSize","borderRadius","fontWeight","colorScheme","theme","dark","transparentize","c","bg","mode","color","darkBg","darkColor","lightColor","getColor","boxShadow","variants","solid","subtle","outline","variantOutline","defaultProps","variant"],"mappings":"AAAA,SAAA,QAAA,EAAA,IAAA,EAAA,cAAA,QAAA,wBAAA;AAEA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,EAAE,EADc,CAAA;AAEhBC,EAAAA,aAAa,EAFG,WAAA;AAGhBC,EAAAA,QAAQ,EAHQ,IAAA;AAIhBC,EAAAA,YAAY,EAJI,IAAA;AAKhBC,EAAAA,UAAU,EAAE;AALI,CAAlB;;AAQA,SAAA,YAAA,CAAA,KAAA,EAAkD;AAChD,MAAM;AAAEC,IAAAA,WAAW,EAAb,CAAA;AAAkBC,IAAAA;AAAlB,MAAN,KAAA;AACA,MAAMC,IAAI,GAAGC,cAAc,CAAIC,CAAJ,GAAA,MAAA,EAAdD,GAAc,CAAdA,CAAb,KAAaA,CAAb;AACA,SAAO;AACLE,IAAAA,EAAE,EAAEC,IAAI,CAAIF,CAAJ,GAAA,MAAA,EAAJE,IAAI,CAAJA,CADC,KACDA,CADC;AAELC,IAAAA,KAAK,EAAED,IAAI,CAAA,OAAA,EAAJA,gBAAI,CAAJA,CAAAA,KAAAA;AAFF,GAAP;AAID;;AAED,SAAA,aAAA,CAAA,KAAA,EAAmD;AACjD,MAAM;AAAEN,IAAAA,WAAW,EAAb,CAAA;AAAkBC,IAAAA;AAAlB,MAAN,KAAA;AACA,MAAMO,MAAM,GAAGL,cAAc,CAAIC,CAAJ,GAAA,MAAA,EAAdD,IAAc,CAAdA,CAAf,KAAeA,CAAf;AACA,SAAO;AACLE,IAAAA,EAAE,EAAEC,IAAI,CAAIF,CAAJ,GAAA,MAAA,EAAJE,MAAI,CAAJA,CADC,KACDA,CADC;AAELC,IAAAA,KAAK,EAAED,IAAI,CAAIF,CAAJ,GAAA,MAAA,EAAgBA,CAAhB,GAAJE,MAAI,CAAJA,CAAAA,KAAAA;AAFF,GAAP;AAID;;AAED,SAAA,cAAA,CAAA,KAAA,EAAoD;AAClD,MAAM;AAAEN,IAAAA,WAAW,EAAb,CAAA;AAAkBC,IAAAA;AAAlB,MAAN,KAAA;AACA,MAAMQ,SAAS,GAAGN,cAAc,CAAIC,CAAJ,GAAA,MAAA,EAAdD,GAAc,CAAdA,CAAlB,KAAkBA,CAAlB;AACA,MAAMO,UAAU,GAAGC,QAAQ,CAAA,KAAA,EAAWP,CAAX,GAA3B,MAA2B,CAA3B;AACA,MAAMG,KAAK,GAAGD,IAAI,CAAA,UAAA,EAAJA,SAAI,CAAJA,CAAd,KAAcA,CAAd;AAEA,SAAO;AAAA,IAAA,KAAA;AAELM,IAAAA,SAAS,EAAA,uBAAuBL;AAF3B,GAAP;AAID;;AAED,IAAMM,QAAQ,GAAG;AACfC,EAAAA,KAAK,EADU,YAAA;AAEfC,EAAAA,MAAM,EAFS,aAAA;AAGfC,EAAAA,OAAO,EAAEC;AAHM,CAAjB;AAMA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EADY,QAAA;AAEnBnB,EAAAA,WAAW,EAAE;AAFM,CAArB;AAKA,eAAe;AAAA,EAAA,SAAA;AAAA,EAAA,QAAA;AAGbkB,EAAAA;AAHa,CAAf","sourcesContent":["import { getColor, mode, transparentize } from \"@chakra-ui/theme-tools\"\n\nconst baseStyle = {\n  px: 1,\n  textTransform: \"uppercase\",\n  fontSize: \"xs\",\n  borderRadius: \"sm\",\n  fontWeight: \"bold\",\n}\n\nfunction variantSolid(props: Record<string, any>) {\n  const { colorScheme: c, theme } = props\n  const dark = transparentize(`${c}.500`, 0.6)(theme)\n  return {\n    bg: mode(`${c}.500`, dark)(props),\n    color: mode(`white`, `whiteAlpha.800`)(props),\n  }\n}\n\nfunction variantSubtle(props: Record<string, any>) {\n  const { colorScheme: c, theme } = props\n  const darkBg = transparentize(`${c}.200`, 0.16)(theme)\n  return {\n    bg: mode(`${c}.100`, darkBg)(props),\n    color: mode(`${c}.800`, `${c}.200`)(props),\n  }\n}\n\nfunction variantOutline(props: Record<string, any>) {\n  const { colorScheme: c, theme } = props\n  const darkColor = transparentize(`${c}.200`, 0.8)(theme)\n  const lightColor = getColor(theme, `${c}.500`)\n  const color = mode(lightColor, darkColor)(props)\n\n  return {\n    color,\n    boxShadow: `inset 0 0 0px 1px ${color}`,\n  }\n}\n\nconst variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline,\n}\n\nconst defaultProps = {\n  variant: \"subtle\",\n  colorScheme: \"gray\",\n}\n\nexport default {\n  baseStyle,\n  variants,\n  defaultProps,\n}\n"]},"metadata":{},"sourceType":"module"}