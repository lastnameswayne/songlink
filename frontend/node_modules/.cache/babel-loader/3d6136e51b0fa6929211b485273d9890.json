{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/swayne/Documents/reactprojects/spotifyAPI/my-app/frontend/src/models/songLinkForm.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { FormHelperText, FormLabel, FormControl, Input, Button, Checkbox, CheckboxGroup, HStack, Box, Center, extendTheme, HEader } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SongLinkForm = () => {\n  _s();\n\n  let history = useHistory();\n  let [id, setId] = useState(\"\");\n  const {\n    handleSubmit,\n    errors,\n    register,\n    formState\n  } = useForm();\n  const [showSpotifyForm, setShowSpotifyForm] = useState(false);\n  const [showSoundcloudForm, setShowSoundcloudForm] = useState(false);\n  const [showYoutubeForm, setShowYoutubeForm] = useState(false);\n  const [showAppleMusicForm, setShowAppleMusicForm] = useState(false);\n  const theme = extendTheme({\n    textStyles: {\n      h1: {\n        fontSize: [\"48px\", \"72px\"],\n        fontWeight: \"bold\",\n        lineHeight: \"110%\",\n        letterSpacing: \"-2%\",\n        textDecoration: \"underline\"\n      }\n    }\n  });\n\n  function onSubmit(values, actions) {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:5000/songs/add\",\n      data: {\n        values\n      }\n    }).then(() => history.push({\n      pathname: `/song/${id}`,\n      state: {\n        id: id\n      }\n    })).catch(error => {\n      alert(error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: \"10px\",\n    padding: \"10px\",\n    borderRadius: \"10px\",\n    border: \"1px\",\n    borderColor: \"gray.200\",\n    children: [/*#__PURE__*/_jsxDEV(Center, {\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        textStyle: h1,\n        children: \"SongLink\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        my: \"15px\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Insert an album with the link(s) to your song and SongLink will create a landing page for your song!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isInvalid: errors.name,\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mb: \"20px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            htmlFor: \"link\",\n            children: \"Image Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"imglink\",\n            placeholder: \"Image Link\",\n            ref: register({\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isInvalid: errors.name,\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            mt: 3,\n            htmlFor: \"link\",\n            children: \"Custom URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: id,\n            onInput: e => setId(e.target.value),\n            name: \"id\",\n            placeholder: \"Custom URL\",\n            ref: register({\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            ml: 2,\n            children: \"Specify a custom unique URL. If you input \\\"123\\\" the link to your track will be heroku.com/song/123!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        as: \"fieldset\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          as: \"legend\",\n          children: \"Streaming services your track is available on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CheckboxGroup, {\n          colorScheme: \"green\",\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              onChange: () => setShowSpotifyForm(!showSpotifyForm),\n              value: \"spotify\",\n              children: \"Spotify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n              onChange: () => setShowSoundcloudForm(!showSoundcloudForm),\n              value: \"soundcloud\",\n              children: \"Soundcloud\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n              onChange: () => setShowYoutubeForm(!showYoutubeForm),\n              value: \"youtube\",\n              children: \"Youtube\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n              onChange: () => setShowAppleMusicForm(!showAppleMusicForm),\n              value: \"applemusic\",\n              children: \"Apple\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), showSpotifyForm ? /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: errors.name,\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"link\",\n          children: \"Spotify link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"spotify\",\n          placeholder: \"Spotify Link\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this) : \"\", showSoundcloudForm ? /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: errors.link,\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"link\",\n          children: \"SoundCloud Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"soundCloud\",\n          placeholder: \"SoundCloud Link\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this) : \"\", showYoutubeForm ? /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: errors.lnk,\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          htmlFor: \"link\",\n          children: \"Youtube\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"youtube\",\n          placeholder: \"Youtube Link\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this) : \"\", showAppleMusicForm ? /*#__PURE__*/_jsxDEV(FormControl, {\n        colorScheme: \"red\",\n        isInvalid: errors.link,\n        isRequired: true,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          colorScheme: \"red\",\n          htmlFor: \"name\",\n          children: \"Apple Music\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"appleMusic\",\n          placeholder: \"Apple Music Link\",\n          ref: register({\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(Center, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {},\n          _hover: {\n            bg: \"#6ed0ce\",\n            boxShadow: \"md\"\n          },\n          mt: 4,\n          bg: \"#3bb5b2\",\n          color: \"#ffffff\",\n          isLoading: formState.isSubmitting,\n          type: \"submit\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SongLinkForm, \"5W55zPb/XjoFKoHf7B0SH/dD0Lg=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = SongLinkForm;\nexport default SongLinkForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongLinkForm\");","map":{"version":3,"sources":["/home/swayne/Documents/reactprojects/spotifyAPI/my-app/frontend/src/models/songLinkForm.js"],"names":["React","useState","useForm","FormHelperText","FormLabel","FormControl","Input","Button","Checkbox","CheckboxGroup","HStack","Box","Center","extendTheme","HEader","axios","useHistory","SongLinkForm","history","id","setId","handleSubmit","errors","register","formState","showSpotifyForm","setShowSpotifyForm","showSoundcloudForm","setShowSoundcloudForm","showYoutubeForm","setShowYoutubeForm","showAppleMusicForm","setShowAppleMusicForm","theme","textStyles","h1","fontSize","fontWeight","lineHeight","letterSpacing","textDecoration","onSubmit","values","actions","method","url","data","then","push","pathname","state","catch","error","alert","name","required","e","target","value","link","lnk","bg","boxShadow","isSubmitting"],"mappings":";;;;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SACEC,cADF,EAEEC,SAFF,EAGEC,WAHF,EAIEC,KAJF,EAKEC,MALF,EAMEC,QANF,EAOEC,aAPF,EAQEC,MARF,EASEC,GATF,EAUEC,MAVF,EAWEC,WAXF,EAWeC,MAXf,QAYQ,kBAZR;AAaA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,MAAIC,OAAO,GAAGF,UAAU,EAAxB;AACA,MAAI,CAACG,EAAD,EAAKC,KAAL,IAAcnB,QAAQ,CAAC,EAAD,CAA1B;AACA,QAAM;AAAEoB,IAAAA,YAAF;AAAgBC,IAAAA,MAAhB;AAAwBC,IAAAA,QAAxB;AAAkCC,IAAAA;AAAlC,MAAgDtB,OAAO,EAA7D;AAEA,QAAM,CAACuB,eAAD,EAAkBC,kBAAlB,IAAwCzB,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAAC0B,kBAAD,EAAqBC,qBAArB,IAA8C3B,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAAC4B,eAAD,EAAkBC,kBAAlB,IAAwC7B,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAAC8B,kBAAD,EAAqBC,qBAArB,IAA8C/B,QAAQ,CAAC,KAAD,CAA5D;AAEA,QAAMgC,KAAK,GAAGpB,WAAW,CAAC;AACxBqB,IAAAA,UAAU,EAAE;AACVC,MAAAA,EAAE,EAAE;AACFC,QAAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,MAAT,CADR;AAEFC,QAAAA,UAAU,EAAE,MAFV;AAGFC,QAAAA,UAAU,EAAE,MAHV;AAIFC,QAAAA,aAAa,EAAE,KAJb;AAKFC,QAAAA,cAAc,EAAE;AALd;AADM;AADY,GAAD,CAAzB;;AAYA,WAASC,QAAT,CAAkBC,MAAlB,EAA0BC,OAA1B,EAAmC;AACjC5B,IAAAA,KAAK,CAAC;AACJ6B,MAAAA,MAAM,EAAE,MADJ;AAEJC,MAAAA,GAAG,EAAE,iCAFD;AAGJC,MAAAA,IAAI,EAAE;AAAEJ,QAAAA;AAAF;AAHF,KAAD,CAAL,CAKGK,IALH,CAKQ,MAAM7B,OAAO,CAAC8B,IAAR,CAAa;AAAEC,MAAAA,QAAQ,EAAG,SAAQ9B,EAAG,EAAxB;AAA2B+B,MAAAA,KAAK,EAAE;AAAE/B,QAAAA,EAAE,EAAEA;AAAN;AAAlC,KAAb,CALd,EAMGgC,KANH,CAMUC,KAAD,IAAW;AAChBC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACD,KARH;AASD;;AAED,sBACE,QAAC,GAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,YAAY,EAAC,MAHf;AAIE,IAAA,MAAM,EAAC,KAJT;AAKE,IAAA,WAAW,EAAC,UALd;AAAA,4BAOE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAEjB,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE;AAAM,MAAA,QAAQ,EAAEd,YAAY,CAACoB,QAAD,CAA5B;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA,gCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEnB,MAAM,CAACgC,IAA/B;AAAqC,UAAA,UAAU,MAA/C;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAW,YAAA,OAAO,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,SADP;AAEE,YAAA,WAAW,EAAC,YAFd;AAGE,YAAA,GAAG,EAAE/B,QAAQ,CAAC;AAAEgC,cAAAA,QAAQ,EAAE;AAAZ,aAAD;AAHf;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAcE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEjC,MAAM,CAACgC,IAA/B;AAAqC,UAAA,UAAU,MAA/C;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,EAAE,EAAE,CAAf;AAAkB,YAAA,OAAO,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,KAAD;AACE,YAAA,KAAK,EAAEnC,EADT;AAEE,YAAA,OAAO,EAAGqC,CAAD,IAAOpC,KAAK,CAACoC,CAAC,CAACC,MAAF,CAASC,KAAV,CAFvB;AAGE,YAAA,IAAI,EAAC,IAHP;AAIE,YAAA,WAAW,EAAC,YAJd;AAKE,YAAA,GAAG,EAAEnC,QAAQ,CAAC;AAAEgC,cAAAA,QAAQ,EAAE;AAAZ,aAAD;AALf;AAAA;AAAA;AAAA;AAAA,kBAJF,eAWE,QAAC,cAAD;AAAgB,YAAA,EAAE,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgCE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,UAAhB;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,aAAD;AAAe,UAAA,WAAW,EAAC,OAA3B;AAAA,iCACE,QAAC,MAAD;AAAA,oCACE,QAAC,QAAD;AACE,cAAA,QAAQ,EAAE,MAAM7B,kBAAkB,CAAC,CAACD,eAAF,CADpC;AAEE,cAAA,KAAK,EAAC,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE,QAAC,QAAD;AACE,cAAA,QAAQ,EAAE,MAAMG,qBAAqB,CAAC,CAACD,kBAAF,CADvC;AAEE,cAAA,KAAK,EAAC,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF,eAaE,QAAC,QAAD;AACE,cAAA,QAAQ,EAAE,MAAMG,kBAAkB,CAAC,CAACD,eAAF,CADpC;AAEE,cAAA,KAAK,EAAC,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF,eAmBE,QAAC,QAAD;AACE,cAAA,QAAQ,EAAE,MAAMG,qBAAqB,CAAC,CAACD,kBAAF,CADvC;AAEE,cAAA,KAAK,EAAC,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCF,EAiEGN,eAAe,gBACd,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEH,MAAM,CAACgC,IAA/B;AAAqC,QAAA,UAAU,MAA/C;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,WAAW,EAAC,cAFd;AAGE,UAAA,GAAG,EAAE/B,QAAQ,CAAC;AAAEgC,YAAAA,QAAQ,EAAE;AAAZ,WAAD;AAHf;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADc,GAUd,EA3EJ,EA6EG5B,kBAAkB,gBACjB,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEL,MAAM,CAACqC,IAA/B;AAAqC,QAAA,UAAU,MAA/C;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,YADP;AAEE,UAAA,WAAW,EAAC,iBAFd;AAGE,UAAA,GAAG,EAAEpC,QAAQ,CAAC;AAAEgC,YAAAA,QAAQ,EAAE;AAAZ,WAAD;AAHf;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADiB,GAUjB,EAvFJ,EAyFG1B,eAAe,gBACd,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEP,MAAM,CAACsC,GAA/B;AAAoC,QAAA,UAAU,MAA9C;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,WAAW,EAAC,cAFd;AAGE,UAAA,GAAG,EAAErC,QAAQ,CAAC;AAAEgC,YAAAA,QAAQ,EAAE;AAAZ,WAAD;AAHf;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADc,GAUd,EAnGJ,EAqGGxB,kBAAkB,gBACjB,QAAC,WAAD;AAAa,QAAA,WAAW,EAAC,KAAzB;AAA+B,QAAA,SAAS,EAAET,MAAM,CAACqC,IAAjD;AAAuD,QAAA,UAAU,MAAjE;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,WAAW,EAAC,KAAvB;AAA6B,UAAA,OAAO,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,YADP;AAEE,UAAA,WAAW,EAAC,kBAFd;AAGE,UAAA,GAAG,EAAEpC,QAAQ,CAAC;AAAEgC,YAAAA,QAAQ,EAAE;AAAZ,WAAD;AAHf;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADiB,GAYjB,EAjHJ,eAmHE,QAAC,MAAD;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAE,MAAM,CAAE,CADnB;AAEE,UAAA,MAAM,EAAE;AAAEM,YAAAA,EAAE,EAAE,SAAN;AAAiBC,YAAAA,SAAS,EAAE;AAA5B,WAFV;AAGE,UAAA,EAAE,EAAE,CAHN;AAIE,UAAA,EAAE,EAAC,SAJL;AAKE,UAAA,KAAK,EAAC,SALR;AAME,UAAA,SAAS,EAAEtC,SAAS,CAACuC,YANvB;AAOE,UAAA,IAAI,EAAC,QAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8ID,CAhLD;;GAAM9C,Y;UACUD,U,EAEwCd,O;;;KAHlDe,Y;AAiLN,eAAeA,YAAf","sourcesContent":["import { React, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  FormHelperText,\n  FormLabel,\n  FormControl,\n  Input,\n  Button,\n  Checkbox,\n  CheckboxGroup,\n  HStack,\n  Box,\n  Center,\n  extendTheme, HEader\n } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SongLinkForm = () => {\n  let history = useHistory();\n  let [id, setId] = useState(\"\");\n  const { handleSubmit, errors, register, formState } = useForm();\n\n  const [showSpotifyForm, setShowSpotifyForm] = useState(false);\n  const [showSoundcloudForm, setShowSoundcloudForm] = useState(false);\n  const [showYoutubeForm, setShowYoutubeForm] = useState(false);\n  const [showAppleMusicForm, setShowAppleMusicForm] = useState(false);\n\n  const theme = extendTheme({\n    textStyles: {\n      h1: {\n        fontSize: [\"48px\", \"72px\"],\n        fontWeight: \"bold\",\n        lineHeight: \"110%\",\n        letterSpacing: \"-2%\",\n        textDecoration: \"underline\"\n      },\n    }\n  })\n\n  function onSubmit(values, actions) {\n    axios({\n      method: \"POST\",\n      url: \"http://localhost:5000/songs/add\",\n      data: { values },\n    })\n      .then(() => history.push({ pathname: `/song/${id}`, state: { id: id } }))\n      .catch((error) => {\n        alert(error);\n      });\n  }\n\n  return (\n    <Box\n      mt=\"10px\"\n      padding=\"10px\"\n      borderRadius=\"10px\"\n      border=\"1px\"\n      borderColor=\"gray.200\"\n    >\n      <Center>\n        <Header textStyle={h1}>SongLink</Header>\n      </Center>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Box my=\"15px\">\n          <FormLabel>\n            Insert an album with the link(s) to your song and SongLink will\n            create a landing page for your song!\n          </FormLabel>\n          <FormControl isInvalid={errors.name} isRequired>\n            <Box mb=\"20px\"></Box>\n            <FormLabel htmlFor=\"link\">Image Link</FormLabel>\n            <Input\n              name=\"imglink\"\n              placeholder=\"Image Link\"\n              ref={register({ required: true })}\n            />\n          </FormControl>\n          <FormControl isInvalid={errors.name} isRequired>\n            <FormLabel mt={3} htmlFor=\"link\">\n              Custom URL\n            </FormLabel>\n            <Input\n              value={id}\n              onInput={(e) => setId(e.target.value)}\n              name=\"id\"\n              placeholder=\"Custom URL\"\n              ref={register({ required: true })}\n            />\n            <FormHelperText ml={2}>\n              Specify a custom unique URL. If you input \"123\" the link to your\n              track will be heroku.com/song/123!\n            </FormHelperText>\n          </FormControl>\n        </Box>\n        <FormControl as=\"fieldset\">\n          <FormLabel as=\"legend\">\n            Streaming services your track is available on\n          </FormLabel>\n          <CheckboxGroup colorScheme=\"green\">\n            <HStack>\n              <Checkbox\n                onChange={() => setShowSpotifyForm(!showSpotifyForm)}\n                value=\"spotify\"\n              >\n                Spotify\n              </Checkbox>\n              <Checkbox\n                onChange={() => setShowSoundcloudForm(!showSoundcloudForm)}\n                value=\"soundcloud\"\n              >\n                Soundcloud\n              </Checkbox>\n              <Checkbox\n                onChange={() => setShowYoutubeForm(!showYoutubeForm)}\n                value=\"youtube\"\n              >\n                Youtube\n              </Checkbox>\n              <Checkbox\n                onChange={() => setShowAppleMusicForm(!showAppleMusicForm)}\n                value=\"applemusic\"\n              >\n                Apple\n              </Checkbox>\n            </HStack>\n          </CheckboxGroup>\n        </FormControl>\n        {showSpotifyForm ? (\n          <FormControl isInvalid={errors.name} isRequired>\n            <FormLabel htmlFor=\"link\">Spotify link</FormLabel>\n            <Input\n              name=\"spotify\"\n              placeholder=\"Spotify Link\"\n              ref={register({ required: true })}\n            />\n          </FormControl>\n        ) : (\n          \"\"\n        )}\n        {showSoundcloudForm ? (\n          <FormControl isInvalid={errors.link} isRequired>\n            <FormLabel htmlFor=\"link\">SoundCloud Link</FormLabel>\n            <Input\n              name=\"soundCloud\"\n              placeholder=\"SoundCloud Link\"\n              ref={register({ required: true })}\n            />\n          </FormControl>\n        ) : (\n          \"\"\n        )}\n        {showYoutubeForm ? (\n          <FormControl isInvalid={errors.lnk} isRequired>\n            <FormLabel htmlFor=\"link\">Youtube</FormLabel>\n            <Input\n              name=\"youtube\"\n              placeholder=\"Youtube Link\"\n              ref={register({ required: true })}\n            />\n          </FormControl>\n        ) : (\n          \"\"\n        )}\n        {showAppleMusicForm ? (\n          <FormControl colorScheme=\"red\" isInvalid={errors.link} isRequired>\n            <FormLabel colorScheme=\"red\" htmlFor=\"name\">\n              Apple Music\n            </FormLabel>\n            <Input\n              name=\"appleMusic\"\n              placeholder=\"Apple Music Link\"\n              ref={register({ required: true })}\n            />\n          </FormControl>\n        ) : (\n          \"\"\n        )}\n        <Center>\n          <Button\n            onClick={() => {}}\n            _hover={{ bg: \"#6ed0ce\", boxShadow: \"md\" }}\n            mt={4}\n            bg=\"#3bb5b2\"\n            color=\"#ffffff\"\n            isLoading={formState.isSubmitting}\n            type=\"submit\"\n          >\n            Create\n          </Button>\n        </Center>\n      </form>\n    </Box>\n  );\n};\nexport default SongLinkForm;\n"]},"metadata":{},"sourceType":"module"}