{"ast":null,"code":"import { createParser, system } from \"../core\";\nvar config = {\n  transform: true,\n  transformOrigin: true\n};\nexport var transform = system(config);\nexport var transformParser = createParser(config);","map":{"version":3,"sources":["../../../src/config/transform.ts"],"names":["config","transform","transformOrigin","system","transformParser","createParser"],"mappings":"AACA,SAAA,YAAA,EAAA,MAAA,QAAA,SAAA;AAGA,IAAMA,MAAc,GAAG;AACrBC,EAAAA,SAAS,EADY,IAAA;AAErBC,EAAAA,eAAe,EAAE;AAFI,CAAvB;AAgBA,OAAO,IAAMD,SAAS,GAAGE,MAAM,CAAxB,MAAwB,CAAxB;AACP,OAAO,IAAMC,eAAe,GAAGC,YAAY,CAApC,MAAoC,CAApC","sourcesContent":["import * as CSS from \"csstype\"\nimport { createParser, Config, system } from \"../core\"\nimport { Length, ResponsiveValue } from \"../utils\"\n\nconst config: Config = {\n  transform: true,\n  transformOrigin: true,\n}\n\nexport interface TransformProps {\n  /**\n   * The CSS `transform` property\n   */\n  transform?: ResponsiveValue<CSS.Property.Transform>\n  /**\n   * The CSS `transform-origin` property\n   */\n  transformOrigin?: ResponsiveValue<CSS.Property.TransformOrigin<Length>>\n}\n\nexport const transform = system(config)\nexport const transformParser = createParser(config)\n"]},"metadata":{},"sourceType":"module"}