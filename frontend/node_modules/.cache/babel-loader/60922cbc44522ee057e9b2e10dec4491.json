{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * Layout component used to visually separate content in a list or group.\n * It display a thin horizontal or vertical line, and renders a `hr` tag.\n *\n * @see Docs https://chakra-ui.com/docs/data-display/divider\n */\n\nexport var Divider = /*#__PURE__*/forwardRef((props, ref) => {\n  var _useStyleConfig = useStyleConfig(\"Divider\", props),\n      {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor\n  } = _useStyleConfig,\n      styles = _objectWithoutPropertiesLoose(_useStyleConfig, [\"borderLeftWidth\", \"borderBottomWidth\", \"borderTopWidth\", \"borderRightWidth\", \"borderWidth\", \"borderStyle\", \"borderColor\"]);\n\n  var _omitThemingProps = omitThemingProps(props),\n      {\n    className,\n    orientation = \"horizontal\",\n    __css\n  } = _omitThemingProps,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"className\", \"orientation\", \"__css\"]);\n\n  var dividerStyles = {\n    vertical: {\n      borderLeftWidth: borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\"\n    },\n    horizontal: {\n      borderBottomWidth: borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\"\n    }\n  };\n  return /*#__PURE__*/React.createElement(chakra.hr, _extends({\n    ref: ref,\n    role: \"separator\",\n    \"aria-orientation\": orientation\n  }, rest, {\n    __css: _extends({}, styles, {\n      border: \"0\",\n      borderColor,\n      borderStyle\n    }, dividerStyles[orientation], __css),\n    className: cx(\"chakra-divider\", className)\n  }));\n});\n\nif (__DEV__) {\n  Divider.displayName = \"Divider\";\n}","map":{"version":3,"sources":["../../src/divider.tsx"],"names":["Divider","forwardRef","borderColor","styles","useStyleConfig","orientation","__css","rest","omitThemingProps","dividerStyles","vertical","borderLeftWidth","height","horizontal","borderBottomWidth","width","border","borderStyle","cx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,MAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,cAAA,QAAA,mBAAA;AAQA,SAAA,EAAA,EAAA,OAAA,QAAA,kBAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMA,OAAO,GAAA,aAAGC,UAAU,CAAqB,CAAA,KAAA,EAAA,GAAA,KAAgB;AACpE,MAAA,eAAA,GASIG,cAAc,CAAA,SAAA,EATlB,KASkB,CATlB;AAAA,MAAM;AAAA,IAAA,eAAA;AAAA,IAAA,iBAAA;AAAA,IAAA,cAAA;AAAA,IAAA,gBAAA;AAAA,IAAA,WAAA;AAAA,IAAA,WAAA;AAOJF,IAAAA;AAPI,MAAN,eAAA;AAAA,MAQKC,MARL,GAAA,6BAAA,CAAA,eAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,aAAA,CAAA,CAAA;;AAUA,MAAA,iBAAA,GAKIK,gBAAgB,CALpB,KAKoB,CALpB;AAAA,MAAM;AAAA,IAAA,SAAA;AAEJH,IAAAA,WAAW,GAFP,YAAA;AAGJC,IAAAA;AAHI,MAAN,iBAAA;AAAA,MAIKC,IAJL,GAAA,6BAAA,CAAA,iBAAA,EAAA,CAAA,WAAA,EAAA,aAAA,EAAA,OAAA,CAAA,CAAA;;AAOA,MAAME,aAAa,GAAG;AACpBC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,eAAe,EACbA,eAAe,IAAfA,gBAAAA,IAAAA,WAAAA,IAFM,KAAA;AAGRC,MAAAA,MAAM,EAAE;AAHA,KADU;AAMpBC,IAAAA,UAAU,EAAE;AACVC,MAAAA,iBAAiB,EACfA,iBAAiB,IAAjBA,cAAAA,IAAAA,WAAAA,IAFQ,KAAA;AAGVC,MAAAA,KAAK,EAAE;AAHG;AANQ,GAAtB;AAaA,SAAA,aACE,KAAA,CAAA,aAAA,CAAC,MAAD,CAAA,EAAA,EAAA,QAAA,CAAA;AACE,IAAA,GAAG,EADL,GAAA;AAEE,IAAA,IAAI,EAFN,WAAA;AAGE,wBAAkBV;AAHpB,GAAA,EAAA,IAAA,EAAA;AAKE,IAAA,KAAK,EAAA,QAAA,CAAA,EAAA,EAAA,MAAA,EAAA;AAEHW,MAAAA,MAAM,EAFH,GAAA;AAAA,MAAA,WAAA;AAKHC,MAAAA;AALG,KAAA,EAMAR,aAAa,CANb,WAMa,CANb,EALP,KAKO,CALP;AAcE,IAAA,SAAS,EAAES,EAAE,CAAA,gBAAA,EAAA,SAAA;AAdf,GAAA,CAAA,CADF;AA/BK,CAA0B,CAA1B;;AAuDP,IAAA,OAAA,EAAa;AACXlB,EAAAA,OAAO,CAAPA,WAAAA,GAAAA,SAAAA;AACD","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\n/**\n * Layout component used to visually separate content in a list or group.\n * It display a thin horizontal or vertical line, and renders a `hr` tag.\n *\n * @see Docs https://chakra-ui.com/docs/data-display/divider\n */\nexport const Divider = forwardRef<DividerProps, \"hr\">((props, ref) => {\n  const {\n    borderLeftWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderWidth,\n    borderStyle,\n    borderColor,\n    ...styles\n  } = useStyleConfig(\"Divider\", props)\n  const {\n    className,\n    orientation = \"horizontal\",\n    __css,\n    ...rest\n  } = omitThemingProps(props)\n\n  const dividerStyles = {\n    vertical: {\n      borderLeftWidth:\n        borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\",\n    },\n    horizontal: {\n      borderBottomWidth:\n        borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\",\n    },\n  }\n\n  return (\n    <chakra.hr\n      ref={ref}\n      role=\"separator\"\n      aria-orientation={orientation}\n      {...rest}\n      __css={{\n        ...styles,\n        border: \"0\",\n\n        borderColor,\n        borderStyle,\n        ...dividerStyles[orientation],\n        ...__css,\n      }}\n      className={cx(\"chakra-divider\", className)}\n    />\n  )\n})\n\nexport interface DividerProps extends HTMLChakraProps<\"div\">, ThemingProps {\n  orientation?: \"horizontal\" | \"vertical\"\n}\n\nif (__DEV__) {\n  Divider.displayName = \"Divider\"\n}\n"]},"metadata":{},"sourceType":"module"}