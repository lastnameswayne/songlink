{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { fromEntries } from \"@chakra-ui/utils\";\nexport var createBreakpoints = config => {\n  var sorted = fromEntries(Object.entries(_extends({\n    base: \"0em\"\n  }, config)).sort((a, b) => parseInt(a[1], 10) > parseInt(b[1], 10) ? 1 : -1));\n  return Object.assign(Object.values(sorted), sorted);\n};","map":{"version":3,"sources":["../../src/breakpoints.ts"],"names":["createBreakpoints","config","sorted","fromEntries","base","parseInt","a","b","Object"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAAA,WAAA,QAAA,kBAAA;AAYA,OAAO,IAAMA,iBAAiB,GAC5BC,MAD+B,IAEZ;AACnB,MAAMC,MAAM,GAAGC,WAAW,CACxB,MAAM,CAAN,OAAA,CAAA,QAAA,CAAA;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GAAA,EAAA,MAAA,CAAA,EAAA,IAAA,CAAgD,CAAA,CAAA,EAAA,CAAA,KAC9CC,QAAQ,CAACC,CAAC,CAAF,CAAE,CAAF,EAARD,EAAQ,CAARA,GAAqBA,QAAQ,CAACE,CAAC,CAAF,CAAE,CAAF,EAA7BF,EAA6B,CAA7BA,GAAAA,CAAAA,GAA8C,CAFlD,CACE,CADwB,CAA1B;AAMA,SAAOG,MAAM,CAANA,MAAAA,CAAcA,MAAM,CAANA,MAAAA,CAAdA,MAAcA,CAAdA,EAAP,MAAOA,CAAP;AATK,CAAA","sourcesContent":["import { fromEntries } from \"@chakra-ui/utils\"\n\nexport interface BaseBreakpointConfig extends Record<string, string> {\n  sm: string\n  md: string\n  lg: string\n  xl: string\n}\n\nexport type Breakpoints<T = BaseBreakpointConfig> = string[] & WithBase<T>\nexport type WithBase<T> = T & { base: \"0em\" }\n\nexport const createBreakpoints = <T extends BaseBreakpointConfig>(\n  config: T,\n): Breakpoints<T> => {\n  const sorted = fromEntries<WithBase<T>>(\n    Object.entries({ base: \"0em\", ...config }).sort((a, b) =>\n      parseInt(a[1], 10) > parseInt(b[1], 10) ? 1 : -1,\n    ),\n  )\n\n  return Object.assign(Object.values(sorted), sorted)\n}\n"]},"metadata":{},"sourceType":"module"}